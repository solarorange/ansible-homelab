# =============================================================================
# HOMEPAGE DASHBOARD - DOCKER COMPOSE CONFIGURATION
# =============================================================================

version: '3.8'

services:
  # =============================================================================
  # MAIN HOMEPAGE SERVICE
  # =============================================================================
  homepage:
    image: ghcr.io/benphelps/homepage:latest
    container_name: homepage
    restart: unless-stopped
    ports:
      - "${HOMEPAGE_PORT:-3000}:3000"
    volumes:
      - ./config:/app/config:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - PUID=${PUID:-1000}
      - PGID=${PGID:-1000}
      - TZ=${TIMEZONE:-UTC}
      - NODE_ENV=production
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.homepage.rule=Host(`homepage.${DOMAIN:-homelab.local}`)"
      - "traefik.http.routers.homepage.entrypoints=websecure"
      - "traefik.http.routers.homepage.tls.certresolver=letsencrypt"
      - "traefik.http.services.homepage.loadbalancer.server.port=3000"
      - "traefik.docker.network=traefik"
      - "homepage.group=Management & Control"
      - "homepage.icon=homepage.png"
      - "homepage.description=Dashboard & Service Discovery"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/tmp

  # =============================================================================
  # WEATHER API SERVICE (OPTIONAL)
  # =============================================================================
  weather-api:
    image: ghcr.io/benphelps/homepage-weather:latest
    container_name: homepage-weather
    restart: unless-stopped
    environment:
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY:-}
      - WEATHER_LAT=${WEATHER_LAT:-40.7128}
      - WEATHER_LON=${WEATHER_LON:--74.0060}
      - WEATHER_UNITS=${WEATHER_UNITS:-metric}
    networks:
      - traefik
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 60s
      timeout: 10s
      retries: 3
    security_opt:
      - no-new-privileges:true
    read_only: true

  # =============================================================================
  # SYSTEM MONITORING SERVICE (OPTIONAL)
  # =============================================================================
  system-monitor:
    image: ghcr.io/benphelps/homepage-system:latest
    container_name: homepage-system
    restart: unless-stopped
    volumes:
      - /:/host:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - HOST_PROC=/host/proc
      - HOST_SYS=/host/sys
      - HOST_ETC=/host/etc
    networks:
      - traefik
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 60s
      timeout: 10s
      retries: 3
    security_opt:
      - no-new-privileges:true
    read_only: true

  # =============================================================================
  # BACKUP SERVICE (OPTIONAL)
  # =============================================================================
  backup-service:
    image: alpine:latest
    container_name: homepage-backup
    restart: "no"
    volumes:
      - ./config:/config:ro
      - ./backups:/backups
    environment:
      - BACKUP_ENABLED=${BACKUP_ENABLED:-true}
      - BACKUP_RETENTION_DAYS=${BACKUP_RETENTION_DAYS:-30}
    command: |
      sh -c "
        if [ "$${BACKUP_ENABLED}" = "true" ]; then
          echo 'Creating backup...'
          tar -czf /backups/homepage-config-$$(date +%Y%m%d-%H%M%S).tar.gz -C /config .
          echo 'Cleaning old backups...'
          find /backups -name '*.tar.gz' -mtime +$${BACKUP_RETENTION_DAYS} -delete
          echo 'Backup completed'
        else
          echo 'Backup disabled'
        fi
      "
    profiles:
      - backup

networks:
  traefik:
    external: true
  homepage_internal:
    driver: bridge

volumes:
  homepage_data:
    driver: local 