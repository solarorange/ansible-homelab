#!/bin/bash
# DumbAssets Backup Verification Script
# Generated by Ansible - Do not edit manually

set -euo pipefail

# Configuration
SERVICE_NAME="dumbassets"
BACKUP_DIR="{{ dumbassets_backup_dir }}"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Check if backup file is provided
if [ -z "$1" ]; then
    echo -e "${RED}ERROR: Please specify a backup file${NC}"
    echo "Usage: $0 <backup_file>"
    exit 1
fi

BACKUP_FILE="$1"

# Check if backup file exists
if [ ! -f "$BACKUP_FILE" ]; then
    echo -e "${RED}ERROR: Backup file $BACKUP_FILE does not exist${NC}"
    exit 1
fi

echo -e "${BLUE}Verifying backup file: $BACKUP_FILE${NC}"

# Check file size
FILE_SIZE=$(stat -c%s "$BACKUP_FILE")
if [ "$FILE_SIZE" -eq 0 ]; then
    echo -e "${RED}ERROR: Backup file is empty${NC}"
    exit 1
fi

echo "Backup file size: $(numfmt --to=iec-i --suffix=B "$FILE_SIZE")"

# Test archive integrity
echo "Testing archive integrity..."
if [[ "$BACKUP_FILE" == *.tar.gz ]]; then
    if tar -tzf "$BACKUP_FILE" > /dev/null 2>&1; then
        echo -e "${GREEN}✓ Archive integrity check passed${NC}"
    else
        echo -e "${RED}✗ Archive integrity check failed${NC}"
        exit 1
    fi
else
    if tar -tf "$BACKUP_FILE" > /dev/null 2>&1; then
        echo -e "${GREEN}✓ Archive integrity check passed${NC}"
    else
        echo -e "${RED}✗ Archive integrity check failed${NC}"
        exit 1
    fi
fi

# List contents
echo "Backup contents:"
if [[ "$BACKUP_FILE" == *.tar.gz ]]; then
    tar -tzf "$BACKUP_FILE" | head -10
else
    tar -tf "$BACKUP_FILE" | head -10
fi

# Check for essential files
echo "Checking for essential files..."
TEMP_DIR=$(mktemp -d)
trap 'rm -rf "$TEMP_DIR"' EXIT

if [[ "$BACKUP_FILE" == *.tar.gz ]]; then
    tar -xzf "$BACKUP_FILE" -C "$TEMP_DIR"
else
    tar -xf "$BACKUP_FILE" -C "$TEMP_DIR"
fi

# Check if data directory exists and has content
if [ -d "$TEMP_DIR/dumbassets" ] && [ "$(ls -A "$TEMP_DIR/dumbassets")" ]; then
    echo -e "${GREEN}✓ Data directory exists and contains files${NC}"
else
    echo -e "${YELLOW}⚠ Data directory is empty or missing${NC}"
fi

echo -e "${GREEN}Backup verification completed successfully${NC}" 