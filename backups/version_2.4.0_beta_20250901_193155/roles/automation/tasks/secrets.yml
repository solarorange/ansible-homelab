---
# Shared secrets writer for services
- name: Ensure secrets directory exists
  ansible.builtin.file:
    path: "{{ secret_dir_root | default(docker_dir ~ '/' ~ service_name) }}/secrets"
    state: directory
    mode: "0700"
    owner: "{{ username | default(ansible_user_id | default('root')) }}"
    group: "{{ username | default(ansible_user_gid | default('root')) }}"

- name: Write secret files (0600)
  ansible.builtin.copy:
    dest: "{{ secret_dir_root | default(docker_dir ~ '/' ~ service_name) }}/secrets/{{ item.name }}"
    content: "{{ item.value | string }}"
    mode: "0600"
    owner: "{{ username | default(ansible_user_id | default('root')) }}"
    group: "{{ username | default(ansible_user_gid | default('root')) }}"
  no_log: true
  loop: "{{ secret_files | default([]) }}"
  when: secret_files | default([]) | length > 0

- name: Write secret files derived from environment maps (0600)
  ansible.builtin.copy:
    dest: "{{ secret_dir_root | default(docker_dir ~ '/' ~ service_name) }}/secrets/{{ item.key }}"
    content: "{{ item.value | string }}"
    mode: "0600"
    owner: "{{ username | default(ansible_user_id | default('root')) }}"
    group: "{{ username | default(ansible_user_gid | default('root')) }}"
  no_log: true
  vars:
    secret_name_regex: "{{ secret_name_regex | default('(PASSWORD|TOKEN|SECRET|KEY)') }}"
  loop: "{{ (secret_env_maps | default([])) | map('dict2items') | list | flatten }}"
  when:
    - secret_env_maps is defined
    - (secret_env_maps | length) > 0
    - item.key is match(secret_name_regex)
