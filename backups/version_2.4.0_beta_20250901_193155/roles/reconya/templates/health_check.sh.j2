#!/bin/bash
# Reconya Health Check Script
# Generated by Ansible - Do not edit manually

set -euo pipefail

# Configuration
SERVICE_NAME="reconya"
SERVICE_URL="http://{{ ansible_default_ipv4.address }}:{{ reconya_port }}/api/health"
LOG_FILE="{{ reconya_health_check_log_file }}"
TIMEOUT="{{ reconya_health_check_timeout | default(30) }}"
RETRIES="{{ reconya_health_check_retries | default(3) }}"

# Logging function
log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" >> "$LOG_FILE"
}

# Health check function
check_health() {
    local response
    local status
    
    log "Starting health check for $SERVICE_NAME"
    
    # Check if container is running
    if ! docker ps --format "table {{.Names}}" | grep -q "{{ reconya_backend_container_name }}"; then
        log "ERROR: $SERVICE_NAME container is not running"
        return 1
    fi
    
    # Check health endpoint
    response=$(curl -s -w "%{http_code}" -o /dev/null --max-time "$TIMEOUT" "$SERVICE_URL" || echo "000")
    status=$?
    
    if [ "$status" -eq 0 ] && [ "$response" -eq 200 ]; then
        log "SUCCESS: $SERVICE_NAME health check passed (HTTP $response)"
        return 0
    else
        log "ERROR: $SERVICE_NAME health check failed (HTTP $response, exit $status)"
        return 1
    fi
}

# Main execution
main() {
    local attempt=1
    local success=false
    
    while [ $attempt -le $RETRIES ] && [ "$success" = false ]; do
        if check_health; then
            success=true
        else
            log "Attempt $attempt/$RETRIES failed, retrying in 5 seconds..."
            sleep 5
            ((attempt++))
        fi
    done
    
    if [ "$success" = false ]; then
        log "CRITICAL: $SERVICE_NAME health check failed after $RETRIES attempts"
        exit 1
    fi
    
    log "Health check completed successfully"
    exit 0
}

# Run main function
main "$@" 