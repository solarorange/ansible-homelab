---
# Update Backup Schedules Task
# Updates all service backup schedules to use the new staggered timing

- name: Update Sonarr backup schedule
  ansible.builtin.cron:
    name: "Backup Sonarr data"
    job: "{{ docker_dir }}/sonarr/scripts/manage.sh backup"
    minute: "{{ backup_schedules.sonarr.split(' ')[0] }}"
    hour: "{{ backup_schedules.sonarr.split(' ')[1] }}"
    user: "{{ username }}"
    state: present

- name: Update Radarr backup schedule
  ansible.builtin.cron:
    name: "Backup Radarr data"
    job: "{{ docker_dir }}/radarr/scripts/manage.sh backup"
    minute: "{{ backup_schedules.radarr.split(' ')[0] }}"
    hour: "{{ backup_schedules.radarr.split(' ')[1] }}"
    user: "{{ username }}"
    state: present

- name: Update Lidarr backup schedule
  ansible.builtin.cron:
    name: "Backup Lidarr data"
    job: "{{ docker_dir }}/lidarr/scripts/manage.sh backup"
    minute: "{{ backup_schedules.lidarr.split(' ')[0] }}"
    hour: "{{ backup_schedules.lidarr.split(' ')[1] }}"
    user: "{{ username }}"
    state: present

- name: Update Readarr backup schedule
  ansible.builtin.cron:
    name: "Backup Readarr data"
    job: "{{ docker_dir }}/readarr/scripts/manage.sh backup"
    minute: "{{ backup_schedules.readarr.split(' ')[0] }}"
    hour: "{{ backup_schedules.readarr.split(' ')[1] }}"
    user: "{{ username }}"
    state: present

- name: Update Prowlarr backup schedule
  ansible.builtin.cron:
    name: "Backup Prowlarr data"
    job: "{{ docker_dir }}/prowlarr/scripts/manage.sh backup"
    minute: "{{ backup_schedules.prowlarr.split(' ')[0] }}"
    hour: "{{ backup_schedules.prowlarr.split(' ')[1] }}"
    user: "{{ username }}"
    state: present

- name: Update Bazarr backup schedule
  ansible.builtin.cron:
    name: "Backup Bazarr data"
    job: "{{ docker_dir }}/bazarr/scripts/manage.sh backup"
    minute: "{{ backup_schedules.bazarr.split(' ')[0] }}"
    hour: "{{ backup_schedules.bazarr.split(' ')[1] }}"
    user: "{{ username }}"
    state: present

- name: Update qBittorrent backup schedule
  ansible.builtin.cron:
    name: "Backup qBittorrent data"
    job: "{{ docker_dir }}/qbittorrent/scripts/manage.sh backup"
    minute: "{{ backup_schedules.qbittorrent.split(' ')[0] }}"
    hour: "{{ backup_schedules.qbittorrent.split(' ')[1] }}"
    user: "{{ username }}"
    state: present

- name: Update Sabnzbd backup schedule
  ansible.builtin.cron:
    name: "Backup Sabnzbd data"
    job: "{{ docker_dir }}/sabnzbd/scripts/manage.sh backup"
    minute: "{{ backup_schedules.sabnzbd.split(' ')[0] }}"
    hour: "{{ backup_schedules.sabnzbd.split(' ')[1] }}"
    user: "{{ username }}"
    state: present

- name: Update Tdarr backup schedule
  ansible.builtin.cron:
    name: "Backup Tdarr data"
    job: "{{ docker_dir }}/tdarr/scripts/manage.sh backup"
    minute: "{{ backup_schedules.tdarr.split(' ')[0] }}"
    hour: "{{ backup_schedules.tdarr.split(' ')[1] }}"
    user: "{{ username }}"
    state: present

- name: Update Komga backup schedule
  ansible.builtin.cron:
    name: "Backup Komga data"
    job: "{{ docker_dir }}/komga/scripts/manage.sh backup"
    minute: "{{ backup_schedules.komga.split(' ')[0] }}"
    hour: "{{ backup_schedules.komga.split(' ')[1] }}"
    user: "{{ username }}"
    state: present

- name: Update Audiobookshelf backup schedule
  ansible.builtin.cron:
    name: "Backup Audiobookshelf data"
    job: "{{ docker_dir }}/audiobookshelf/scripts/manage.sh backup"
    minute: "{{ backup_schedules.audiobookshelf.split(' ')[0] }}"
    hour: "{{ backup_schedules.audiobookshelf.split(' ')[1] }}"
    user: "{{ username }}"
    state: present

- name: Update Jellyfin backup schedule
  ansible.builtin.cron:
    name: "Backup Jellyfin data"
    job: "{{ docker_dir }}/jellyfin/scripts/manage.sh backup"
    minute: "{{ backup_schedules.jellyfin.split(' ')[0] }}"
    hour: "{{ backup_schedules.jellyfin.split(' ')[1] }}"
    user: "{{ username }}"
    state: present

- name: Update Emby backup schedule
  ansible.builtin.cron:
    name: "Backup Emby data"
    job: "{{ docker_dir }}/emby/scripts/manage.sh backup"
    minute: "{{ backup_schedules.emby.split(' ')[0] }}"
    hour: "{{ backup_schedules.emby.split(' ')[1] }}"
    user: "{{ username }}"
    state: present

- name: Update Tautulli backup schedule
  ansible.builtin.cron:
    name: "Backup Tautulli data"
    job: "{{ docker_dir }}/tautulli/scripts/manage.sh backup"
    minute: "{{ backup_schedules.tautulli.split(' ')[0] }}"
    hour: "{{ backup_schedules.tautulli.split(' ')[1] }}"
    user: "{{ username }}"
    state: present

- name: Update Overseerr backup schedule
  ansible.builtin.cron:
    name: "Backup Overseerr data"
    job: "{{ docker_dir }}/overseerr/scripts/manage.sh backup"
    minute: "{{ backup_schedules.overseerr.split(' ')[0] }}"
    hour: "{{ backup_schedules.overseerr.split(' ')[1] }}"
    user: "{{ username }}"
    state: present

- name: Update Nextcloud backup schedule
  ansible.builtin.cron:
    name: "Backup Nextcloud data"
    job: "{{ docker_dir }}/nextcloud/scripts/manage.sh backup"
    minute: "{{ backup_schedules.nextcloud.split(' ')[0] }}"
    hour: "{{ backup_schedules.nextcloud.split(' ')[1] }}"
    user: "{{ username }}"
    state: present

- name: Update Samba backup schedule
  ansible.builtin.cron:
    name: "Backup Samba data"
    job: "{{ docker_dir }}/samba/scripts/manage.sh backup"
    minute: "{{ backup_schedules.samba.split(' ')[0] }}"
    hour: "{{ backup_schedules.samba.split(' ')[1] }}"
    user: "{{ username }}"
    state: present

- name: Update Syncthing backup schedule
  ansible.builtin.cron:
    name: "Backup Syncthing data"
    job: "{{ docker_dir }}/syncthing/scripts/manage.sh backup"
    minute: "{{ backup_schedules.syncthing.split(' ')[0] }}"
    hour: "{{ backup_schedules.syncthing.split(' ')[1] }}"
    user: "{{ username }}"
    state: present

- name: Update Paperless-ngx backup schedule
  ansible.builtin.cron:
    name: "Backup Paperless-ngx data"
    job: "{{ docker_dir }}/paperless-ngx/scripts/manage.sh backup"
    minute: "{{ backup_schedules.paperless_ngx.split(' ')[0] }}"
    hour: "{{ backup_schedules.paperless_ngx.split(' ')[1] }}"
    user: "{{ username }}"
    state: present

- name: Update Immich backup schedule
  ansible.builtin.cron:
    name: "Backup Immich data"
    job: "{{ docker_dir }}/immich/scripts/manage.sh backup"
    minute: "{{ backup_schedules.immich.split(' ')[0] }}"
    hour: "{{ backup_schedules.immich.split(' ')[1] }}"
    user: "{{ username }}"
    state: present

- name: Update Portainer backup schedule
  ansible.builtin.cron:
    name: "Backup Portainer data"
    job: "{{ docker_dir }}/portainer/scripts/manage.sh backup"
    minute: "{{ backup_schedules.portainer.split(' ')[0] }}"
    hour: "{{ backup_schedules.portainer.split(' ')[1] }}"
    user: "{{ username }}"
    state: present

- name: Update Grafana backup schedule
  ansible.builtin.cron:
    name: "Backup Grafana data"
    job: "{{ docker_dir }}/grafana/scripts/manage.sh backup"
    minute: "{{ backup_schedules.grafana.split(' ')[0] }}"
    hour: "{{ backup_schedules.grafana.split(' ')[1] }}"
    user: "{{ username }}"
    state: present

- name: Update Prometheus backup schedule
  ansible.builtin.cron:
    name: "Backup Prometheus data"
    job: "{{ docker_dir }}/prometheus/scripts/manage.sh backup"
    minute: "{{ backup_schedules.prometheus.split(' ')[0] }}"
    hour: "{{ backup_schedules.prometheus.split(' ')[1] }}"
    user: "{{ username }}"
    state: present

- name: Update Loki backup schedule
  ansible.builtin.cron:
    name: "Backup Loki data"
    job: "{{ docker_dir }}/loki/scripts/manage.sh backup"
    minute: "{{ backup_schedules.loki.split(' ')[0] }}"
    hour: "{{ backup_schedules.loki.split(' ')[1] }}"
    user: "{{ username }}"
    state: present

- name: Update Alertmanager backup schedule
  ansible.builtin.cron:
    name: "Backup Alertmanager data"
    job: "{{ docker_dir }}/alertmanager/scripts/manage.sh backup"
    minute: "{{ backup_schedules.alertmanager.split(' ')[0] }}"
    hour: "{{ backup_schedules.alertmanager.split(' ')[1] }}"
    user: "{{ username }}"
    state: present

- name: Update Pi-hole backup schedule
  ansible.builtin.cron:
    name: "Backup Pi-hole data"
    job: "{{ docker_dir }}/pihole/scripts/manage.sh backup"
    minute: "{{ backup_schedules.pihole.split(' ')[0] }}"
    hour: "{{ backup_schedules.pihole.split(' ')[1] }}"
    user: "{{ username }}"
    state: present

- name: Update PostgreSQL backup schedule
  ansible.builtin.cron:
    name: "Backup PostgreSQL data"
    job: "{{ docker_dir }}/postgresql/scripts/manage.sh backup"
    minute: "{{ backup_schedules.postgresql.split(' ')[0] }}"
    hour: "{{ backup_schedules.postgresql.split(' ')[1] }}"
    user: "{{ username }}"
    state: present

- name: Update MariaDB backup schedule
  ansible.builtin.cron:
    name: "Backup MariaDB data"
    job: "{{ docker_dir }}/mariadb/scripts/manage.sh backup"
    minute: "{{ backup_schedules.mariadb.split(' ')[0] }}"
    hour: "{{ backup_schedules.mariadb.split(' ')[1] }}"
    user: "{{ username }}"
    state: present

- name: Update Redis backup schedule
  ansible.builtin.cron:
    name: "Backup Redis data"
    job: "{{ docker_dir }}/redis/scripts/manage.sh backup"
    minute: "{{ backup_schedules.redis.split(' ')[0] }}"
    hour: "{{ backup_schedules.redis.split(' ')[1] }}"
    user: "{{ username }}"
    state: present

- name: Update Home Assistant backup schedule
  ansible.builtin.cron:
    name: "Backup Home Assistant data"
    job: "{{ docker_dir }}/homeassistant/scripts/manage.sh backup"
    minute: "{{ backup_schedules.homeassistant.split(' ')[0] }}"
    hour: "{{ backup_schedules.homeassistant.split(' ')[1] }}"
    user: "{{ username }}"
    state: present

- name: Update Zigbee2MQTT backup schedule
  ansible.builtin.cron:
    name: "Backup Zigbee2MQTT data"
    job: "{{ docker_dir }}/zigbee2mqtt/scripts/manage.sh backup"
    minute: "{{ backup_schedules.zigbee2mqtt.split(' ')[0] }}"
    hour: "{{ backup_schedules.zigbee2mqtt.split(' ')[1] }}"
    user: "{{ username }}"
    state: present

- name: Update Mosquitto backup schedule
  ansible.builtin.cron:
    name: "Backup Mosquitto data"
    job: "{{ docker_dir }}/mosquitto/scripts/manage.sh backup"
    minute: "{{ backup_schedules.mosquitto.split(' ')[0] }}"
    hour: "{{ backup_schedules.mosquitto.split(' ')[1] }}"
    user: "{{ username }}"
    state: present

- name: Update InfluxDB backup schedule
  ansible.builtin.cron:
    name: "Backup InfluxDB data"
    job: "{{ docker_dir }}/influxdb/scripts/manage.sh backup"
    minute: "{{ backup_schedules.influxdb.split(' ')[0] }}"
    hour: "{{ backup_schedules.influxdb.split(' ')[1] }}"
    user: "{{ username }}"
    state: present

- name: Update Telegraf backup schedule
  ansible.builtin.cron:
    name: "Backup Telegraf data"
    job: "{{ docker_dir }}/telegraf/scripts/manage.sh backup"
    minute: "{{ backup_schedules.telegraf.split(' ')[0] }}"
    hour: "{{ backup_schedules.telegraf.split(' ')[1] }}"
    user: "{{ username }}"
    state: present

- name: Display updated backup schedule summary
  ansible.builtin.debug:
    msg: |
      Backup Schedules Updated Successfully!
      
      New Staggered Schedule:
      
      1:00 AM - Critical Services:
      - Authentik: {{ backup_schedules.authentik }}
      - Traefik: {{ backup_schedules.traefik }}
      - Vault: {{ backup_schedules.vault }}
      - PostgreSQL: {{ backup_schedules.postgresql }}
      - MariaDB: {{ backup_schedules.mariadb }}
      - Redis: {{ backup_schedules.redis }}
      
      2:00 AM - High Priority Services:
      - Home Assistant: {{ backup_schedules.homeassistant }}
      - Zigbee2MQTT: {{ backup_schedules.zigbee2mqtt }}
      - Mosquitto: {{ backup_schedules.mosquitto }}
      - InfluxDB: {{ backup_schedules.influxdb }}
      - Telegraf: {{ backup_schedules.telegraf }}
      
      3:00 AM - Media Core Services:
      - Sonarr: {{ backup_schedules.sonarr }}
      - Radarr: {{ backup_schedules.radarr }}
      - Lidarr: {{ backup_schedules.lidarr }}
      - Readarr: {{ backup_schedules.readarr }}
      - Prowlarr: {{ backup_schedules.prowlarr }}
      - Bazarr: {{ backup_schedules.bazarr }}
      
      4:00 AM - Media Download Services:
      - qBittorrent: {{ backup_schedules.qbittorrent }}
      - Sabnzbd: {{ backup_schedules.sabnzbd }}
      - Tdarr: {{ backup_schedules.tdarr }}
      - Komga: {{ backup_schedules.komga }}
      - Audiobookshelf: {{ backup_schedules.audiobookshelf }}
      
      5:00 AM - Media Playback Services:
      - Jellyfin: {{ backup_schedules.jellyfin }}
      - Emby: {{ backup_schedules.emby }}
      - Tautulli: {{ backup_schedules.tautulli }}
      - Overseerr: {{ backup_schedules.overseerr }}
      
      6:00 AM - File Services:
      - Nextcloud: {{ backup_schedules.nextcloud }}
      - Samba: {{ backup_schedules.samba }}
      - Syncthing: {{ backup_schedules.syncthing }}
      - Paperless-ngx: {{ backup_schedules.paperless_ngx }}
      - Immich: {{ backup_schedules.immich }}
      
      7:00 AM - Utility Services:
      - Portainer: {{ backup_schedules.portainer }}
      - Grafana: {{ backup_schedules.grafana }}
      - Prometheus: {{ backup_schedules.prometheus }}
      - Loki: {{ backup_schedules.loki }}
      - Alertmanager: {{ backup_schedules.alertmanager }}
      - Pi-hole: {{ backup_schedules.pihole }}
      
      Benefits:
      - Reduced resource contention
      - Better dependency management
      - Improved backup reliability
      - Easier troubleshooting
      - Better monitoring and alerting 