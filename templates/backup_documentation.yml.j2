---
# Backup Documentation
# Generated on {{ ansible_date_time.iso8601 }}

backup_configuration:
  backup_id: "{{ ansible_date_time.epoch }}"
  backup_date: "{{ ansible_date_time.iso8601 }}"
  backup_strategy: "Incremental with encryption"
  backup_retention: "{{ backup_strategies.incremental.retention_days | default(30) }} days"

backup_strategies:
  incremental:
    enabled: "{{ backup_strategies.incremental.enabled | default(false) }}"
    compression: "{{ backup_strategies.incremental.compression | default(true) }}"
    encryption: "{{ backup_strategies.incremental.encryption | default(false) }}"
    deduplication: true
    retention_days: "{{ backup_strategies.incremental.retention_days | default(30) }}"
  
  full:
    enabled: "{{ backup_strategies.full.enabled | default(false) }}"
    schedule: "Weekly"
    retention_weeks: "{{ backup_strategies.full.retention_weeks | default(12) }}"
  
  database:
    enabled: "{{ backup_strategies.database.enabled | default(false) }}"
    point_in_time_recovery: true
    retention_days: "{{ backup_strategies.database.retention_days | default(7) }}"

backup_targets:
  local:
    path: "{{ backup_dir }}"
    type: "Local storage"
    capacity: "{{ ansible_mounts | selectattr('mount', 'equalto', '/') | map(attribute='size_total') | first }}"
    available: "{{ ansible_mounts | selectattr('mount', 'equalto', '/') | map(attribute='size_available') | first }}"
  
  remote:
    enabled: "{{ backup_remote.enabled | default(false) }}"
    type: "{{ backup_remote.type | default('rsync') }}"
    destination: "{{ backup_remote.destination | default('') }}"
    encryption: "{{ backup_remote.encryption | default(false) }}"

backup_schedules:
  daily:
    time: "02:00"
    type: "Incremental"
    services: ["all"]
  
  weekly:
    day: "Sunday"
    time: "03:00"
    type: "Full"
    services: ["all"]
  
  database:
    time: "01:00"
    type: "Database dump"
    services: ["postgresql", "mariadb", "redis"]

backup_services:
  configuration:
    - name: "Docker configurations"
      path: "{{ docker_config_root }}"
      frequency: "Daily"
      retention: "{{ backup_strategies.incremental.retention_days | default(30) }} days"
    
    - name: "Application data"
      path: "{{ docker_data_root }}"
      frequency: "Daily"
      retention: "{{ backup_strategies.incremental.retention_days | default(30) }} days"
    
    - name: "System configurations"
      path: "/etc"
      frequency: "Weekly"
      retention: "{{ backup_strategies.full.retention_weeks | default(12) }} weeks"
  
  databases:
    - name: "PostgreSQL"
      enabled: "{{ postgresql_enabled | default(false) }}"
      backup_command: "pg_dump"
      frequency: "Daily"
      retention: "{{ backup_strategies.database.retention_days | default(7) }} days"
    
    - name: "MariaDB"
      enabled: "{{ mariadb_enabled | default(false) }}"
      backup_command: "mysqldump"
      frequency: "Daily"
      retention: "{{ backup_strategies.database.retention_days | default(7) }} days"
    
    - name: "Redis"
      enabled: "{{ redis_enabled | default(false) }}"
      backup_command: "Redis RDB"
      frequency: "Daily"
      retention: "{{ backup_strategies.database.retention_days | default(7) }} days"

backup_verification:
  integrity_checks:
    enabled: true
    method: "SHA256 checksums"
    frequency: "After each backup"
  
  restore_testing:
    enabled: "{{ backup_testing.enabled | default(false) }}"
    frequency: "Monthly"
    test_environment: "Isolated container"
  
  monitoring:
    backup_status_monitoring: "{{ 'enabled' if backup_strategies.incremental.enabled | default(false) else 'disabled' }}"
    alert_on_failure: true
    alert_on_success: false

backup_encryption:
  algorithm: "AES-256-GCM"
  key_management: "Vault-based"
  key_rotation: "{{ backup_encryption.key_rotation | default(90) }} days"
  encryption_at_rest: "{{ backup_strategies.incremental.encryption | default(false) }}"

backup_monitoring:
  metrics:
    - "Backup success rate"
    - "Backup duration"
    - "Backup size"
    - "Restore time"
    - "Storage utilization"
  
  alerts:
    - "Backup failure"
    - "Backup too old"
    - "Storage space low"
    - "Encryption key expiry"

backup_recovery:
  recovery_procedures:
    full_system:
      estimated_time: "2-4 hours"
      requirements: ["Backup media", "Target system"]
      steps:
        - "Restore system configuration"
        - "Restore application data"
        - "Restore databases"
        - "Verify system integrity"
    
    service_specific:
      estimated_time: "30-60 minutes"
      requirements: ["Service backup", "Target environment"]
      steps:
        - "Stop affected service"
        - "Restore service data"
        - "Restore service configuration"
        - "Start service"
        - "Verify service health"
  
  disaster_recovery:
    rto: "4 hours"  # Recovery Time Objective
    rpo: "24 hours"  # Recovery Point Objective
    procedures_documented: true
    tested_frequency: "Quarterly"

backup_compliance:
  data_retention:
    legal_requirements: "{{ backup_compliance.legal_retention | default(7) }} years"
    operational_requirements: "{{ backup_strategies.incremental.retention_days | default(30) }} days"
    audit_logs: "{{ backup_compliance.audit_logs | default(90) }} days"
  
  access_control:
    backup_access: "Restricted to authorized personnel"
    encryption_keys: "Vault-managed"
    audit_trail: "Enabled"

backup_optimization:
  compression:
    algorithm: "LZ4"
    compression_ratio: "~3:1"
    cpu_overhead: "Low"
  
  deduplication:
    enabled: true
    method: "Content-based"
    savings: "~40-60%"
  
  scheduling:
    staggered_backups: true
    resource_limits: "{{ resource_limits.max_concurrent_backups | default(3) }}"
    peak_hour_avoidance: true

backup_reporting:
  daily_summary:
    enabled: true
    recipients: "{{ admin_email }}"
    content:
      - "Backup status"
      - "Storage utilization"
      - "Error summary"
  
  monthly_report:
    enabled: true
    content:
      - "Success rate trends"
      - "Storage growth"
      - "Performance metrics"
      - "Compliance status" 