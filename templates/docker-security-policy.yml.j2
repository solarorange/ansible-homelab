# Docker Security Policy Configuration
# Comprehensive security policies for Docker containers

docker_security_policy:
  enabled: true
  
  # Container runtime security
  runtime:
    # Privilege restrictions
    no_new_privileges: true
    read_only_root_filesystem: true
    user: "{{ username }}:{{ username }}"
    
    # Capability management
    drop_capabilities:
      - ALL
    add_capabilities:
      - CHOWN
      - SETGID
      - SETUID
      - DAC_OVERRIDE
      - FOWNER
      - MKNOD
      - NET_RAW
      - SETFCAP
    
    # Security options
    security_opts:
      - no-new-privileges
      - seccomp=unconfined
      - apparmor=docker-default
    
    # Resource limits
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
      nproc:
        soft: 32768
        hard: 32768
      core:
        soft: 0
        hard: 0
    
    # Memory and CPU limits
    mem_limit: "512m"
    mem_reservation: "256m"
    memswap_limit: "1g"
    cpus: "1.0"
    cpu_shares: 1024
    cpu_quota: 100000
    cpu_period: 100000
    
    # Network security
    network_mode: bridge
    network_aliases: []
    extra_hosts: []
    
    # Volume security
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
      - /var/tmp:noexec,nosuid,size=100m
      - /run:noexec,nosuid,size=100m
    
    # Device restrictions
    devices: []
    privileged: false
    ipc_mode: private
    uts_mode: private
    pid_mode: private

  # Image security
  images:
    # Image scanning
    scan_before_deploy: true
    scan_schedule: "daily"
    vulnerability_threshold: "medium"
    
    # Image sources
    trusted_registries:
      - docker.io
      - ghcr.io
      - quay.io
      - registry.gitlab.com
    
    # Image signing
    require_signed_images: true
    signature_verification: true
    
    # Image updates
    auto_update: false
    update_schedule: "weekly"
    update_window: "02:00-04:00"
    
    # Image cleanup
    cleanup_old_images: true
    image_retention_days: 30
    dangling_image_cleanup: true

  # Network security
  networks:
    # Default network configuration
    default_network:
      driver: bridge
      internal: true
      enable_ipv6: false
      ipam_config:
        - subnet: "172.20.0.0/16"
          gateway: "172.20.0.1"
    
    # Network segmentation
    segments:
      monitoring:
        subnet: "172.21.0.0/16"
        internal: true
        labels:
          - "security=monitoring"
      
      media:
        subnet: "172.22.0.0/16"
        internal: false
        labels:
          - "security=media"
      
      security:
        subnet: "172.23.0.0/16"
        internal: true
        labels:
          - "security=high"
      
      automation:
        subnet: "172.24.0.0/16"
        internal: false
        labels:
          - "security=automation"
    
    # Network policies
    policies:
      allow_inter_segment_communication: false
      require_network_labels: true
      default_isolation: true

  # Volume security
  volumes:
    # Volume permissions
    default_permissions:
      owner: "{{ username }}:{{ username }}"
      mode: "0755"
    
    # Volume encryption
    encryption:
      enabled: true
      algorithm: "AES-256-XTS"
      key_rotation_days: 90
    
    # Volume backup
    backup:
      enabled: true
      schedule: "daily"
      retention_days: 7
      compression: true
      encryption: true
    
    # Volume monitoring
    monitoring:
      enabled: true
      disk_usage_threshold: 80
      iops_threshold: 1000
      latency_threshold: 100

  # Container lifecycle
  lifecycle:
    # Health checks
    health_checks:
      enabled: true
      interval: "30s"
      timeout: "10s"
      retries: 3
      start_period: "40s"
    
    # Restart policies
    restart_policy:
      default: "unless-stopped"
      max_restart_count: 5
      restart_window: "5m"
    
    # Resource monitoring
    resource_monitoring:
      enabled: true
      cpu_threshold: 80
      memory_threshold: 85
      disk_threshold: 90
      network_threshold: 1000
    
    # Logging
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        compress: "true"
    
    # Signal handling
    stop_signal: "SIGTERM"
    stop_timeout: 30

  # Security scanning
  scanning:
    # Container scanning
    container_scanning:
      enabled: true
      tools:
        - trivy
        - clair
        - anchore
      
      scan_schedule: "daily"
      scan_timeout: "30m"
      
      vulnerability_severity:
        critical: "block"
        high: "warn"
        medium: "info"
        low: "ignore"
    
    # Runtime scanning
    runtime_scanning:
      enabled: true
      tools:
        - falco
        - sysdig
        - tracee
      
      rules:
        - "Privilege escalation"
        - "Container escape"
        - "Suspicious network activity"
        - "File system tampering"
        - "Process injection"
    
    # Compliance scanning
    compliance_scanning:
      enabled: true
      frameworks:
        - "CIS Docker Benchmark"
        - "NIST Cybersecurity Framework"
        - "ISO 27001"
      
      scan_frequency: "weekly"
      report_format: "json"

  # Incident response
  incident_response:
    # Automated response
    automated_response:
      enabled: true
      actions:
        - "isolate_container"
        - "block_network_access"
        - "create_incident_ticket"
        - "notify_security_team"
    
    # Incident classification
    incident_severity:
      critical:
        - "Container escape"
        - "Privilege escalation"
        - "Data exfiltration"
      
      high:
        - "Unauthorized access"
        - "Malware detection"
        - "Suspicious activity"
      
      medium:
        - "Resource abuse"
        - "Policy violation"
        - "Vulnerability exploitation"
      
      low:
        - "Configuration drift"
        - "Performance degradation"
        - "Log anomalies"
    
    # Response procedures
    procedures:
      isolation:
        - "Stop container"
        - "Block network access"
        - "Freeze filesystem"
        - "Preserve evidence"
      
      investigation:
        - "Collect logs"
        - "Analyze network traffic"
        - "Examine filesystem"
        - "Review process list"
      
      recovery:
        - "Remove compromised container"
        - "Restore from backup"
        - "Update security policies"
        - "Monitor for recurrence"

  # Monitoring and alerting
  monitoring:
    # Security events
    security_events:
      enabled: true
      sources:
        - "container_logs"
        - "system_logs"
        - "network_logs"
        - "audit_logs"
      
      correlation:
        enabled: true
        time_window: "5m"
        threshold: 3
    
    # Performance monitoring
    performance:
      enabled: true
      metrics:
        - "cpu_usage"
        - "memory_usage"
        - "disk_io"
        - "network_io"
        - "container_health"
      
      alerting:
        cpu_warning: 80
        cpu_critical: 90
        memory_warning: 85
        memory_critical: 95
        disk_warning: 80
        disk_critical: 90
    
    # Compliance monitoring
    compliance:
      enabled: true
      checks:
        - "image_vulnerabilities"
        - "runtime_security"
        - "network_policies"
        - "volume_permissions"
        - "resource_limits"
      
      reporting:
        frequency: "daily"
        format: "html"
        recipients: "{{ admin_email }}" 