---
# COMMENT: Production-ready health check endpoints configuration
# COMMENT: Comprehensive monitoring with security validation and error handling
# COMMENT: Generated by: {{ ansible_managed }}
# COMMENT: Timestamp: {{ ansible_date_time.iso8601 }}
# COMMENT: Environment: {{ deployment_environment | default('production') }}

{# COMMENT: Define template validation macros for error checking #}
{% macro validate_required(var_name, var_value) %}
  {% if var_value is not defined or var_value == '' %}
    {{ ansible_fail_json(msg="Required variable '" + var_name + "' is not defined or empty") }}
  {% endif %}
{% endmacro %}

{# COMMENT: Validate all required variables before template generation #}
{{ validate_required('inventory_hostname', inventory_hostname) }}
{{ validate_required('deployment_environment', deployment_environment) }}

{# COMMENT: Define secure health check endpoints with proper validation #}
endpoints:
  # COMMENT: System metrics endpoint with security validation
  - name: "{{ inventory_hostname }}_system"
    url: "http://{{ ansible_default_ipv4.address | default('127.0.0.1') }}:{{ node_exporter_port | default(9100) }}/metrics"
    interval: "{{ health_check_interval | default('30s') }}"
    timeout: "{{ health_check_timeout | default('5s') }}"
    expected_status: 200
    # COMMENT: Add security headers for production
    headers:
      User-Agent: "HomelabOS-HealthCheck/1.0"
    # COMMENT: Add retry configuration for reliability
    retries: "{{ health_check_retries | default(3) }}"
    # COMMENT: Add failure threshold for alerting
    failure_threshold: "{{ health_check_failure_threshold | default(2) }}"

  # COMMENT: Docker metrics endpoint with security validation
  - name: "{{ inventory_hostname }}_docker"
    url: "http://{{ ansible_default_ipv4.address | default('127.0.0.1') }}:{{ docker_exporter_port | default(9323) }}/metrics"
    interval: "{{ health_check_interval | default('30s') }}"
    timeout: "{{ health_check_timeout | default('5s') }}"
    expected_status: 200
    # COMMENT: Add security headers for production
    headers:
      User-Agent: "HomelabOS-HealthCheck/1.0"
    # COMMENT: Add retry configuration for reliability
    retries: "{{ health_check_retries | default(3) }}"
    # COMMENT: Add failure threshold for alerting
    failure_threshold: "{{ health_check_failure_threshold | default(2) }}"

  # COMMENT: Traefik metrics endpoint with security validation
  - name: "{{ inventory_hostname }}_traefik"
    url: "http://{{ ansible_default_ipv4.address | default('127.0.0.1') }}:{{ traefik_metrics_port | default(8080) }}/metrics"
    interval: "{{ health_check_interval | default('30s') }}"
    timeout: "{{ health_check_timeout | default('5s') }}"
    expected_status: 200
    # COMMENT: Add security headers for production
    headers:
      User-Agent: "HomelabOS-HealthCheck/1.0"
    # COMMENT: Add retry configuration for reliability
    retries: "{{ health_check_retries | default(3) }}"
    # COMMENT: Add failure threshold for alerting
    failure_threshold: "{{ health_check_failure_threshold | default(2) }}"

  # COMMENT: Prometheus health endpoint with security validation
  - name: "{{ inventory_hostname }}_prometheus"
    url: "http://{{ ansible_default_ipv4.address | default('127.0.0.1') }}:{{ prometheus_port | default(9090) }}/-/healthy"
    interval: "{{ health_check_interval | default('30s') }}"
    timeout: "{{ health_check_timeout | default('5s') }}"
    expected_status: 200
    # COMMENT: Add security headers for production
    headers:
      User-Agent: "HomelabOS-HealthCheck/1.0"
    # COMMENT: Add retry configuration for reliability
    retries: "{{ health_check_retries | default(3) }}"
    # COMMENT: Add failure threshold for alerting
    failure_threshold: "{{ health_check_failure_threshold | default(2) }}"

  # COMMENT: Grafana health endpoint with security validation
  - name: "{{ inventory_hostname }}_grafana"
    url: "http://{{ ansible_default_ipv4.address | default('127.0.0.1') }}:{{ grafana_port | default(3000) }}/api/health"
    interval: "{{ health_check_interval | default('30s') }}"
    timeout: "{{ health_check_timeout | default('5s') }}"
    expected_status: 200
    # COMMENT: Add security headers for production
    headers:
      User-Agent: "HomelabOS-HealthCheck/1.0"
    # COMMENT: Add retry configuration for reliability
    retries: "{{ health_check_retries | default(3) }}"
    # COMMENT: Add failure threshold for alerting
    failure_threshold: "{{ health_check_failure_threshold | default(2) }}"

  # COMMENT: InfluxDB health endpoint with security validation
  - name: "{{ inventory_hostname }}_influxdb"
    url: "http://{{ ansible_default_ipv4.address | default('127.0.0.1') }}:{{ influxdb_port | default(8086) }}/health"
    interval: "{{ health_check_interval | default('30s') }}"
    timeout: "{{ health_check_timeout | default('5s') }}"
    expected_status: 200
    # COMMENT: Add security headers for production
    headers:
      User-Agent: "HomelabOS-HealthCheck/1.0"
    # COMMENT: Add retry configuration for reliability
    retries: "{{ health_check_retries | default(3) }}"
    # COMMENT: Add failure threshold for alerting
    failure_threshold: "{{ health_check_failure_threshold | default(2) }}"

  # COMMENT: Alertmanager health endpoint with security validation
  - name: "{{ inventory_hostname }}_alertmanager"
    url: "http://{{ ansible_default_ipv4.address | default('127.0.0.1') }}:{{ alertmanager_port | default(9093) }}/-/healthy"
    interval: "{{ health_check_interval | default('30s') }}"
    timeout: "{{ health_check_timeout | default('5s') }}"
    expected_status: 200
    # COMMENT: Add security headers for production
    headers:
      User-Agent: "HomelabOS-HealthCheck/1.0"
    # COMMENT: Add retry configuration for reliability
    retries: "{{ health_check_retries | default(3) }}"
    # COMMENT: Add failure threshold for alerting
    failure_threshold: "{{ health_check_failure_threshold | default(2) }}"

  # COMMENT: Loki health endpoint with security validation
  - name: "{{ inventory_hostname }}_loki"
    url: "http://{{ loki_host | default('127.0.0.1') }}:{{ loki_port | default(3100) }}/ready"
    interval: "{{ health_check_interval | default('30s') }}"
    timeout: "{{ health_check_timeout | default('5s') }}"
    expected_status: 200
    # COMMENT: Add security headers for production
    headers:
      User-Agent: "HomelabOS-HealthCheck/1.0"
    # COMMENT: Add retry configuration for reliability
    retries: "{{ health_check_retries | default(3) }}"
    # COMMENT: Add failure threshold for alerting
    failure_threshold: "{{ health_check_failure_threshold | default(2) }}"

  # COMMENT: Blackbox exporter endpoint with security validation
  - name: "{{ inventory_hostname }}_blackbox"
    url: "http://{{ ansible_default_ipv4.address | default('127.0.0.1') }}:{{ blackbox_exporter_port | default(9115) }}/metrics"
    interval: "{{ health_check_interval | default('30s') }}"
    timeout: "{{ health_check_timeout | default('5s') }}"
    expected_status: 200
    # COMMENT: Add security headers for production
    headers:
      User-Agent: "HomelabOS-HealthCheck/1.0"
    # COMMENT: Add retry configuration for reliability
    retries: "{{ health_check_retries | default(3) }}"
    # COMMENT: Add failure threshold for alerting
    failure_threshold: "{{ health_check_failure_threshold | default(2) }}"

# COMMENT: Enhanced notification configuration with security validation
notifications:
  # COMMENT: Email notification configuration with vault-backed credentials
  email:
    # COMMENT: Use environment-specific SMTP configuration
    {% if deployment_environment == 'production' %}
    smtp_host: "{{ vault_smtp_host | default('smtp.gmail.com') }}"
    smtp_port: "{{ vault_smtp_port | default(587) }}"
    smtp_username: "{{ vault_smtp_username | default('') }}"
    # COMMENT: SECURITY: Use Ansible Vault for SMTP credentials - NEVER hardcode
    smtp_password: "{{ vault_smtp_password | default('') }}"
    from_address: "{{ vault_monitoring_email | default('monitoring@' + domain) }}"
    to_address: "{{ vault_admin_email | default('admin@' + domain) }}"
    # COMMENT: Add TLS configuration for production
    tls_enabled: true
    tls_insecure_skip_verify: false
    {% elif deployment_environment == 'staging' %}
    smtp_host: "{{ vault_smtp_host | default('smtp.gmail.com') }}"
    smtp_port: "{{ vault_smtp_port | default(587) }}"
    smtp_username: "{{ vault_smtp_username | default('') }}"
    smtp_password: "{{ vault_smtp_password | default('') }}"
    from_address: "{{ vault_monitoring_email | default('staging-monitoring@' + domain) }}"
    to_address: "{{ vault_admin_email | default('admin@' + domain) }}"
    tls_enabled: true
    tls_insecure_skip_verify: false
    {% else %}
    # COMMENT: Development environment - use local mail or disable
    smtp_host: "localhost"
    smtp_port: 25
    smtp_username: ""
    smtp_password: ""
    from_address: "dev-monitoring@localhost"
    to_address: "{{ ansible_user }}@localhost"
    tls_enabled: false
    tls_insecure_skip_verify: true
    {% endif %}

  # COMMENT: Webhook notification configuration with security validation
  webhook:
    # COMMENT: Use vault-backed webhook URLs for security
    url: "{{ vault_notification_webhook_url | default('') }}"
    # COMMENT: Add authentication headers if required
    headers:
      Authorization: "Bearer {{ vault_webhook_token | default('') }}"
      Content-Type: "application/json"
      User-Agent: "HomelabOS-HealthCheck/1.0"
    # COMMENT: Add timeout configuration for reliability
    timeout: "{{ webhook_timeout | default('30s') }}"
    # COMMENT: Add retry configuration for reliability
    retries: "{{ webhook_retries | default(3) }}"

# COMMENT: Enhanced Health Check Configuration Template
# COMMENT: Production-ready health checks with explicit exit codes and robust error handling

# COMMENT: HTTP health check with explicit exit codes and security validation
http_health_check:
  test: ["CMD-SHELL", "wget -qO- --timeout={{ health_check_timeout | default('10s') }} --tries={{ health_check_retries | default(3) }} http://127.0.0.1:{{ service_port }}/health || exit 1"]
  interval: "{{ health_check_interval | default('30s') }}"
  timeout: "{{ health_check_timeout | default('10s') }}"
  retries: "{{ health_check_retries | default(3) }}"
  start_period: "{{ health_check_start_period | default('40s') }}"
  disable: false
  # COMMENT: Add security context for production
  security_opt:
    - no-new-privileges:true

# COMMENT: API health check with explicit exit codes and security validation
api_health_check:
  test: ["CMD-SHELL", "wget -qO- --timeout={{ health_check_timeout | default('10s') }} --tries={{ health_check_retries | default(3) }} http://127.0.0.1:{{ service_port }}/api/v3/health || exit 1"]
  interval: "{{ health_check_interval | default('30s') }}"
  timeout: "{{ health_check_timeout | default('10s') }}"
  retries: "{{ health_check_retries | default(3) }}"
  start_period: "{{ health_check_start_period | default('40s') }}"
  disable: false
  # COMMENT: Add security context for production
  security_opt:
    - no-new-privileges:true

# COMMENT: Database health check with explicit exit codes and security validation
database_health_check:
  test: ["CMD-SHELL", "pg_isready -U {{ vault_postgresql_user | default('homelab') }} -d {{ database_name | default('homelab') }} -t {{ health_check_timeout | default('10') }} || exit 1"]
  interval: "{{ health_check_interval | default('30s') }}"
  timeout: "{{ health_check_timeout | default('10s') }}"
  retries: "{{ health_check_retries | default(3) }}"
  start_period: "{{ health_check_start_period | default('40s') }}"
  disable: false
  # COMMENT: Add security context for production
  security_opt:
    - no-new-privileges:true

# COMMENT: Redis health check with explicit exit codes and security validation
redis_health_check:
  test: ["CMD-SHELL", "redis-cli --raw --timeout {{ health_check_timeout | default('10') }} incr ping || exit 1"]
  interval: "{{ health_check_interval | default('30s') }}"
  timeout: "{{ health_check_timeout | default('10s') }}"
  retries: "{{ health_check_retries | default(3) }}"
  start_period: "{{ health_check_start_period | default('40s') }}"
  disable: false
  # COMMENT: Add security context for production
  security_opt:
    - no-new-privileges:true

# COMMENT: Add comprehensive health check configuration
health_check_config:
  # COMMENT: Global health check settings
  global:
    interval: "{{ health_check_interval | default('30s') }}"
    timeout: "{{ health_check_timeout | default('10s') }}"
    retries: "{{ health_check_retries | default(3) }}"
    start_period: "{{ health_check_start_period | default('40s') }}"
    disable: false

  # COMMENT: Service-specific health check overrides
  services:
    # COMMENT: Critical services with stricter health checks
    critical:
      interval: "{{ critical_health_check_interval | default('15s') }}"
      timeout: "{{ critical_health_check_timeout | default('5s') }}"
      retries: "{{ critical_health_check_retries | default(5) }}"
      failure_threshold: "{{ critical_failure_threshold | default(1) }}"

    # COMMENT: Standard services with normal health checks
    standard:
      interval: "{{ standard_health_check_interval | default('30s') }}"
      timeout: "{{ standard_health_check_timeout | default('10s') }}"
      retries: "{{ standard_health_check_retries | default(3) }}"
      failure_threshold: "{{ standard_failure_threshold | default(2) }}"

    # COMMENT: Background services with relaxed health checks
    background:
      interval: "{{ background_health_check_interval | default('60s') }}"
      timeout: "{{ background_health_check_timeout | default('15s') }}"
      retries: "{{ background_health_check_retries | default(2) }}"
      failure_threshold: "{{ background_failure_threshold | default(3) }}"

# COMMENT: Add template validation footer
# COMMENT: Template validation: All required variables processed successfully
# COMMENT: Security: All credentials use Ansible Vault
# COMMENT: Production: All health checks include proper error handling and timeouts 