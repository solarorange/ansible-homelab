---
# Backup Orchestration Configuration
# Generated by Ansible - DO NOT EDIT MANUALLY

# Backup root directory
backup_root: "{{ backup_dir }}"

# Docker directory
docker_dir: "{{ docker_dir }}"

# Username
username: "{{ username }}"

# Backup priority levels and timing
priority_levels:
  critical:
    description: "Essential services that must backup first"
    time_slot: "1:00 AM"
    services:
      - authentik
      - traefik
      - vault
      - postgresql
      - mariadb
      - redis
  
  high:
    description: "Important services with moderate data"
    time_slot: "2:00 AM"
    services:
      - homeassistant
      - zigbee2mqtt
      - mosquitto
      - influxdb
      - telegraf
  
  media_core:
    description: "Core media management services"
    time_slot: "3:00 AM"
    services:
      - sonarr
      - radarr
      - lidarr
      - readarr
      - prowlarr
      - bazarr
  
  media_download:
    description: "Download and processing services"
    time_slot: "4:00 AM"
    services:
      - qbittorrent
      - sabnzbd
      - tdarr
      - komga
      - audiobookshelf
  
  media_playback:
    description: "Media playback and streaming services"
    time_slot: "5:00 AM"
    services:
      - jellyfin
      - emby
      - tautulli
      - overseerr
  
  file_services:
    description: "File storage and sharing services"
    time_slot: "6:00 AM"
    services:
      - nextcloud
      - samba
      - syncthing
      - paperless_ngx
      - immich
  
  utilities:
    description: "Utility and monitoring services"
    time_slot: "7:00 AM"
    services:
      - portainer
      - grafana
      - prometheus
      - loki
      - alertmanager
      - pihole

# Staggered backup schedules (in cron format)
schedules:
  # Critical services (1:00 AM)
  authentik: "0 1 * * *"
  traefik: "5 1 * * *"
  vault: "10 1 * * *"
  postgresql: "15 1 * * *"
  mariadb: "20 1 * * *"
  redis: "25 1 * * *"
  
  # High priority services (2:00 AM)
  homeassistant: "0 2 * * *"
  zigbee2mqtt: "5 2 * * *"
  mosquitto: "10 2 * * *"
  influxdb: "15 2 * * *"
  telegraf: "20 2 * * *"
  
  # Media core services (3:00 AM)
  sonarr: "0 3 * * *"
  radarr: "5 3 * * *"
  lidarr: "10 3 * * *"
  readarr: "15 3 * * *"
  prowlarr: "20 3 * * *"
  bazarr: "25 3 * * *"
  
  # Media download services (4:00 AM)
  qbittorrent: "0 4 * * *"
  sabnzbd: "5 4 * * *"
  tdarr: "10 4 * * *"
  komga: "15 4 * * *"
  audiobookshelf: "20 4 * * *"
  
  # Media playback services (5:00 AM)
  jellyfin: "0 5 * * *"
  emby: "5 5 * * *"
  tautulli: "10 5 * * *"
  overseerr: "15 5 * * *"
  
  # File services (6:00 AM)
  nextcloud: "0 6 * * *"
  samba: "5 6 * * *"
  syncthing: "10 6 * * *"
  paperless_ngx: "15 6 * * *"
  immich: "20 6 * * *"
  
  # Utility services (7:00 AM)
  portainer: "0 7 * * *"
  grafana: "5 7 * * *"
  prometheus: "10 7 * * *"
  loki: "15 7 * * *"
  alertmanager: "20 7 * * *"
  pihole: "25 7 * * *"

# Backup dependencies
dependencies:
  sonarr:
    depends_on: ["postgresql", "qbittorrent"]
  radarr:
    depends_on: ["postgresql", "qbittorrent"]
  lidarr:
    depends_on: ["postgresql", "qbittorrent"]
  readarr:
    depends_on: ["postgresql", "qbittorrent"]
  jellyfin:
    depends_on: ["postgresql", "sonarr", "radarr"]
  emby:
    depends_on: ["postgresql", "sonarr", "radarr"]
  nextcloud:
    depends_on: ["postgresql", "redis"]
  paperless_ngx:
    depends_on: ["postgresql", "redis"]

# Resource limits
resource_limits:
  max_concurrent_backups: {{ backup_resource_limits.max_concurrent_backups }}
  max_backup_duration_minutes: {{ backup_resource_limits.max_backup_duration_minutes }}
  max_backup_size_gb: {{ backup_resource_limits.max_backup_size_gb }}
  backup_timeout_minutes: {{ backup_resource_limits.backup_timeout_minutes }}

# Resource thresholds
resource_thresholds:
  cpu_warning: 70
  cpu_critical: 85
  memory_warning: 75
  memory_critical: 85
  disk_warning: 85
  disk_critical: 95
  io_warning: 70
  io_critical: 85

# Backup retention
retention:
  daily: {{ backup_retention.daily | default(7) }}
  weekly: {{ backup_retention.weekly | default(30) }}
  monthly: {{ backup_retention.monthly | default(365) }}

# Monitoring and alerting
monitoring:
  enabled: {{ backup_monitoring.enabled }}
  check_interval_minutes: {{ backup_monitoring.check_interval_minutes }}
  alert_on_failure: {{ backup_monitoring.alert_on_failure }}
  alert_on_timeout: {{ backup_monitoring.alert_on_timeout }}
  alert_on_size_exceeded: {{ backup_monitoring.alert_on_size_exceeded }}

# Notification settings
notifications:
  email:
    enabled: false
    smtp_host: ""
    smtp_port: 587
    smtp_username: ""
    smtp_password: ""
    from_address: ""
    to_address: ""
  
  slack:
    enabled: false
    webhook_url: ""
    channel: "#backups"
  
  telegram:
    enabled: false
    bot_token: ""
    chat_id: ""

# Weekend backup schedule
weekend_schedule:
  saturday:
    start_time: "2:00 AM"
    end_time: "10:00 AM"
    extended_window: true
  
  sunday:
    start_time: "2:00 AM"
    end_time: "8:00 AM"
    maintenance_mode: true

# Service-specific backup settings
service_settings:
  postgresql:
    include_databases: ["sonarr", "radarr", "lidarr", "readarr", "nextcloud", "paperless_ngx"]
    compression: true
    parallel_jobs: 2
  
  mariadb:
    include_databases: ["homeassistant", "authentik"]
    compression: true
    parallel_jobs: 2
  
  redis:
    include_keys: ["*"]
    compression: false
    parallel_jobs: 1
  
  nextcloud:
    include_data: true
    include_config: true
    exclude_patterns: ["*/cache/*", "*/tmp/*"]
  
  paperless_ngx:
    include_documents: true
    include_media: true
    include_database: true
    compression: true
  
  jellyfin:
    include_libraries: true
    include_config: true
    exclude_patterns: ["*/transcoding-temp/*"]
  
  sonarr:
    include_database: true
    include_config: true
    include_downloads: false
  
  radarr:
    include_database: true
    include_config: true
    include_downloads: false

# Backup verification settings
verification:
  enabled: true
  check_integrity: true
  check_permissions: true
  check_size: true
  verify_after_backup: true
  verify_schedule: "0 8 * * *"  # Daily at 8 AM

# Logging configuration
logging:
  level: "INFO"
  max_log_size_mb: 100
  max_log_files: 10
  log_rotation: "daily" 