version: '3.8'

networks:
  homelab:
    name: homelab
    external: true
  monitoring:
    name: monitoring
    external: true

services:
  overseerr:
    image: linuxserver/overseerr:latest
    container_name: overseerr
    restart: unless-stopped
    environment:
      - PUID={{ puid | default(1000) }}
      - PGID={{ pgid | default(1000) }}
      - TZ={{ timezone | default('UTC') }}
      - NODE_ENV=production
    volumes:
      - "{{ config_dir }}/overseerr:/config"
      - "{{ data_dir }}/overseerr:/data"
      - "{{ logs_dir }}/overseerr:/logs"
    # NETWORK: Prefer Traefik ingress; avoid host port exposure unless required.
    # ports:
    #   - "5055:5055"
    networks:
      - homelab
      - monitoring
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=homelab"
      - "traefik.http.routers.overseerr.rule=Host(`overseerr.{{ domain }}`)"
      - "traefik.http.routers.overseerr.entrypoints=websecure"
      - "traefik.http.routers.overseerr.tls=true"
      - "traefik.http.routers.overseerr.tls.certresolver=cloudflare"
      - "traefik.http.services.overseerr.loadbalancer.server.port=5055"
      - "traefik.http.middlewares.overseerr-auth.forwardauth.address=http://authentik:9000/outpost.goauthentik.io/auth/traefik"
      - "traefik.http.middlewares.overseerr-auth.forwardauth.trustForwardHeader=true"
      - "traefik.http.routers.overseerr.middlewares=overseerr-auth"
      - "traefik.http.middlewares.overseerr-headers.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.overseerr-headers.headers.customrequestheaders.X-Forwarded-Host=overseerr.{{ domain }}"
      - "traefik.http.routers.overseerr.middlewares=overseerr-headers"
      # Loki/Promtail scraping labels
      - "logging=promtail"
      - "promtail-job=media"
      - "promtail-service=overseerr"
      - "prometheus.enable=true"
      - "prometheus.job=overseerr"
      - "prometheus.port=5055"
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:5055/api/v1/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp
    ulimits:
      nproc: 65536
      nofile:
        soft: 26677
        hard: 46677
    # NOTE: Swarm-only 'deploy.resources' removed for non-Swarm Compose compatibility.