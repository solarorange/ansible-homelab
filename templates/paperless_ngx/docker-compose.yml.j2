version: '3.8'

services:
  paperless:
    image: {{ paperless_ngx_image }}
    container_name: {{ paperless_ngx_container_name }}
    restart: {{ paperless_ngx_restart_policy }}
    environment:
      - PUID={{ ansible_user_id | default(1000) }}
      - PGID={{ ansible_user_gid | default(1000) }}
      - TZ={{ timezone | default('UTC') }}
      - PAPERLESS_REDIS=redis://{{ paperless_ngx_redis_host }}:{{ paperless_ngx_redis_port }}/{{ paperless_ngx_redis_db }}
      - PAPERLESS_DBHOST={{ paperless_ngx_database_host }}
      - PAPERLESS_DBNAME={{ paperless_ngx_database_name }}
      - PAPERLESS_DBUSER={{ paperless_ngx_database_user }}
      - PAPERLESS_DBPASS_FILE=/run/secrets/PAPERLESS_DBPASS
      - PAPERLESS_SECRET_KEY_FILE=/run/secrets/PAPERLESS_SECRET_KEY
      - PAPERLESS_URL=https://{{ paperless_ngx_domain }}
    volumes:
      - {{ docker_dir }}/paperless/data:/usr/src/paperless/data
      - {{ docker_dir }}/paperless/media:/usr/src/paperless/media
      - {{ docker_dir }}/paperless/export:/usr/src/paperless/export
      - {{ docker_dir }}/paperless/consume:/usr/src/paperless/consume
      - {{ logs_dir }}/paperless-ngx:/usr/src/paperless/logs
    # Prefer Traefik ingress; disable direct host mapping by default
    # ports:
    #   - "{{ paperless_ngx_web_port }}:8000"
    networks:
      - traefik_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.paperless.rule=Host(`{{ paperless_ngx_domain }}`)"
      - "traefik.http.routers.paperless.entrypoints=websecure"
      - "traefik.http.routers.paperless.tls=true"
      - "traefik.http.routers.paperless.tls.certresolver=cloudflare"
      - "traefik.http.services.paperless.loadbalancer.server.port=8000"
      - "traefik.http.middlewares.paperless-auth.forwardauth.address=http://authentik:9000/outpost.goauthentik.io/auth/traefik"
      - "traefik.http.middlewares.paperless-auth.forwardauth.trustForwardHeader=true"
      - "traefik.http.routers.paperless.middlewares=paperless-auth"
      - "traefik.http.middlewares.paperless-headers.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.middlewares.paperless-headers.headers.customrequestheaders.X-Forwarded-Host={{ paperless_ngx_domain }}"
      - "traefik.http.routers.paperless.middlewares=paperless-headers"
      # Loki/Promtail scraping labels
      - "logging=promtail"
      - "promtail-job=paperless"
      - "promtail-service=paperless-ngx"
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
    volumes:
      - {{ docker_dir }}/paperless-ngx/secrets:/run/secrets:ro
    depends_on:
      - paperless-db
      - redis
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:8000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  paperless-db:
    image: postgres:15
    container_name: paperless-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB={{ paperless_ngx_database_name }}
      - POSTGRES_USER={{ paperless_ngx_database_user }}
      - POSTGRES_PASSWORD_FILE=/run/secrets/PAPERLESS_DBPASS
    volumes:
      - {{ docker_dir }}/paperless/database:/var/lib/postgresql/data
      - {{ docker_dir }}/paperless-ngx/secrets:/run/secrets:ro
    networks:
      - traefik_network
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

  redis:
    image: redis:7
    container_name: paperless-redis
    restart: unless-stopped
    volumes:
      - {{ docker_dir }}/paperless/redis:/data
    networks:
      - traefik_network
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"

networks:
  traefik_network:
    external: true 