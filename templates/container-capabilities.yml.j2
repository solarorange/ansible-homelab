# Container Capabilities Configuration
# Defines security capabilities for different container types

container_capabilities:
  enabled: true
  
  # Default capabilities (minimal set)
  default:
    drop:
      - ALL
    add:
      - CHOWN
      - SETGID
      - SETUID
      - DAC_OVERRIDE
      - FOWNER
      - MKNOD
      - NET_RAW
      - SETFCAP
  
  # Service-specific capabilities
  services:
    # Web services (nginx, apache, etc.)
    web:
      drop:
        - ALL
      add:
        - CHOWN
        - SETGID
        - SETUID
        - DAC_OVERRIDE
        - FOWNER
        - MKNOD
        - NET_BIND_SERVICE
        - SETFCAP
    
    # Database services (postgresql, mysql, etc.)
    database:
      drop:
        - ALL
      add:
        - CHOWN
        - SETGID
        - SETUID
        - DAC_OVERRIDE
        - FOWNER
        - MKNOD
        - SETFCAP
        - SYS_CHROOT
        - SYS_PTRACE
    
    # Monitoring services (prometheus, grafana, etc.)
    monitoring:
      drop:
        - ALL
      add:
        - CHOWN
        - SETGID
        - SETUID
        - DAC_OVERRIDE
        - FOWNER
        - MKNOD
        - NET_RAW
        - SETFCAP
        # SYS_ADMIN removed by default. Add per-container only with justification.
    
    # Media services (plex, jellyfin, etc.)
    media:
      drop:
        - ALL
      add:
        - CHOWN
        - SETGID
        - SETUID
        - DAC_OVERRIDE
        - FOWNER
        - MKNOD
        - SETFCAP
        - SYS_NICE  # For media processing
    
    # Security services (authentik, vault, etc.)
    security:
      drop:
        - ALL
      add:
        - CHOWN
        - SETGID
        - SETUID
        - DAC_OVERRIDE
        - FOWNER
        - MKNOD
        - SETFCAP
        # SYS_ADMIN removed by default. Add per-container only with justification.
    
    # Automation services (homeassistant, nodered, etc.)
    automation:
      drop:
        - ALL
      add:
        - CHOWN
        - SETGID
        - SETUID
        - DAC_OVERRIDE
        - FOWNER
        - MKNOD
        - NET_RAW
        - SETFCAP
        - SYS_NICE  # For automation tasks
    
    # Storage services (nextcloud, samba, etc.)
    storage:
      drop:
        - ALL
      add:
        - CHOWN
        - SETGID
        - SETUID
        - DAC_OVERRIDE
        - FOWNER
        - MKNOD
        - SETFCAP
        # SYS_ADMIN removed by default. Add per-container only with justification.
    
    # Network services (traefik, nginx-proxy, etc.)
    network:
      drop:
        - ALL
      add:
        - CHOWN
        - SETGID
        - SETUID
        - DAC_OVERRIDE
        - FOWNER
        - MKNOD
        - NET_BIND_SERVICE
        - NET_RAW
        - SETFCAP
        # SYS_ADMIN removed by default. Add per-container only with justification.
    
    # Development services (gitlab, harbor, etc.)
    development:
      drop:
        - ALL
      add:
        - CHOWN
        - SETGID
        - SETUID
        - DAC_OVERRIDE
        - FOWNER
        - MKNOD
        - SETFCAP
        # SYS_ADMIN removed by default. Add per-container only with justification.
    
    # Utility services (portainer, watchtower, etc.)
    utility:
      drop:
        - ALL
      add:
        - CHOWN
        - SETGID
        - SETUID
        - DAC_OVERRIDE
        - FOWNER
        - MKNOD
        - SETFCAP
        # SYS_ADMIN removed by default. Add per-container only with justification.

  # Capability descriptions and risks
  capability_risks:
    CHOWN:
      description: "Change file ownership"
      risk: "Low"
      justification: "Needed for file operations"
    
    SETGID:
      description: "Set group ID on files"
      risk: "Low"
      justification: "Needed for group operations"
    
    SETUID:
      description: "Set user ID on files"
      risk: "Low"
      justification: "Needed for user operations"
    
    DAC_OVERRIDE:
      description: "Override discretionary access controls"
      risk: "Medium"
      justification: "Needed for file access"
    
    FOWNER:
      description: "Override file ownership restrictions"
      risk: "Medium"
      justification: "Needed for file operations"
    
    MKNOD:
      description: "Create special files"
      risk: "Medium"
      justification: "Needed for device operations"
    
    NET_BIND_SERVICE:
      description: "Bind to privileged ports"
      risk: "Medium"
      justification: "Needed for web services"
    
    NET_RAW:
      description: "Use raw and packet sockets"
      risk: "High"
      justification: "Needed for network monitoring"
    
    SETFCAP:
      description: "Set file capabilities"
      risk: "High"
      justification: "Needed for capability management"
    
    SYS_CHROOT:
      description: "Change root directory"
      risk: "Medium"
      justification: "Needed for database operations"
    
    SYS_PTRACE:
      description: "Trace arbitrary processes"
      risk: "High"
      justification: "Needed for debugging"
    
    SYS_ADMIN:
      description: "System administration"
      risk: "Critical"
      justification: "Needed for system operations"
    
    SYS_NICE:
      description: "Set process priority"
      risk: "Low"
      justification: "Needed for performance tuning"

  # Security policies
  policies:
    # Default policy
    default_policy:
      principle: "least privilege"
      drop_all: true
      add_minimal: true
      justification_required: true
    
    # Escalation policy
    escalation_policy:
      require_approval: true
      approval_workflow:
        - "security_review"
        - "architecture_review"
        - "management_approval"
      
      temporary_escalation:
        max_duration: "24h"
        require_justification: true
        automatic_reversion: true
    
    # Monitoring policy
    monitoring_policy:
      log_capability_usage: true
      alert_on_escalation: true
      audit_capability_changes: true
      
      metrics:
        - "capability_usage"
        - "escalation_frequency"
        - "policy_violations"
    
    # Compliance policy
    compliance_policy:
      frameworks:
        - "CIS Docker Benchmark"
        - "NIST Cybersecurity Framework"
        - "ISO 27001"
      
      requirements:
        - "Document all capability usage"
        - "Justify privilege escalation"
        - "Monitor capability abuse"
        - "Regular capability audits"

  # Implementation guidelines
  implementation:
    # Container startup
    startup:
      validate_capabilities: true
      log_capability_set: true
      verify_least_privilege: true
    
    # Runtime monitoring
    runtime:
      monitor_capability_usage: true
      detect_privilege_escalation: true
      alert_on_anomalies: true
    
    # Incident response
    incident_response:
      isolate_privileged_containers: true
      preserve_capability_logs: true
      investigate_escalation: true
    
    # Recovery procedures
    recovery:
      revert_capability_changes: true
      restore_least_privilege: true
      update_security_policies: true 