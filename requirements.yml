---
# COMMENT: Production-ready Ansible Collection and Role Requirements
# COMMENT: Comprehensive dependency management for homelab deployment
# COMMENT: Generated by: {{ ansible_managed }}
# COMMENT: Timestamp: {{ ansible_date_time.iso8601 }}
# COMMENT: Environment: {{ deployment_environment | default('production') }}

# COMMENT: Core Ansible Collections for production deployment
collections:
  # COMMENT: Essential system management collections
  - name: community.general
    version: ">=7.0.0,<8.0.0"
    source: "https://galaxy.ansible.com"
    verify_ssl_cert: true
# - name: community.docker
#   version: ">=3.8.0,<4.0.0"  # COMMENT: Duplicate entry removed
#   source: "https://galaxy.ansible.com"
#   verify_ssl_cert: true
  - name: ansible.posix
    version: ">=1.5.0,<2.0.0"
    source: "https://galaxy.ansible.com"
    verify_ssl_cert: true

  # COMMENT: Security and cryptography collections
  - name: community.crypto
    version: ">=2.15.0,<3.0.0"
    source: "https://galaxy.ansible.com"
    verify_ssl_cert: true
  - name: community.docker
    version: ">=4.0.0"
    source: "https://galaxy.ansible.com"
    verify_ssl_cert: true

  # COMMENT: Network and infrastructure collections
  - name: community.network
    version: ">=5.0.0,<6.0.0"
    source: "https://galaxy.ansible.com"
    verify_ssl_cert: true
  - name: community.proxmox
    version: ">=1.3.0,<2.0.0"
    source: "https://galaxy.ansible.com"
    verify_ssl_cert: true

  # COMMENT: Monitoring and observability collections
# - name: community.monitoring
#   version: "1.0.0"  # COMMENT: Collection not available on Ansible Galaxy
#   source: "https://galaxy.ansible.com"
#   verify_ssl_cert: true
  - name: community.postgresql
    version: "2.0.0"
    source: "https://galaxy.ansible.com"
    verify_ssl_cert: true

  # COMMENT: Cloud and container orchestration collections
  - name: kubernetes.core
    version: ">=2.4.0,<3.0.0"
    source: "https://galaxy.ansible.com"
    verify_ssl_cert: true
  - name: community.kubernetes
    version: "2.0.0"
    source: "https://galaxy.ansible.com"
    verify_ssl_cert: true

# COMMENT: Production-ready roles with security and reliability focus
roles:
  # COMMENT: Core infrastructure roles
  - name: geerlingguy.docker
    version: "7.5.3"
    source: "https://galaxy.ansible.com"
    verify_ssl_cert: true
    # COMMENT: Production Docker configuration with security hardening
    vars:
      docker_install_compose_plugin: true
      docker_users:
        - "{{ ansible_user }}"
      docker_opts: "--log-driver=json-file --log-opt max-size=100m --log-opt max-file=3"

  - name: geerlingguy.pip
    version: "2.0.0"
    source: "https://galaxy.ansible.com"
    verify_ssl_cert: true
    # COMMENT: Secure pip configuration with trusted sources
    vars:
      pip_install_packages:
        - name: "{{ item.name }}"
          version: "{{ item.version }}"
          source: "{{ item.source | default('PyPI') }}"
      pip_trusted_hosts: []
      pip_index_url: "https://pypi.org/simple/"

  - name: geerlingguy.security
    version: "1.0.0"
    source: "https://galaxy.ansible.com"
    verify_ssl_cert: true
    # COMMENT: Comprehensive security hardening
    vars:
      security_ssh_permit_root_login: false
      security_ssh_password_authentication: false
      security_ssh_public_key_authentication: true
      security_fail2ban_enabled: true
      security_ufw_enabled: true

  - name: geerlingguy.ntp
    version: "1.0.0"
    source: "https://galaxy.ansible.com"
    verify_ssl_cert: true
    # COMMENT: NTP configuration with security
    vars:
      ntp_servers:
        - "0.pool.ntp.org"
        - "1.pool.ntp.org"
        - "2.pool.ntp.org"
        - "3.pool.ntp.org"
      ntp_restrict_default: "kod nomodify notrap nopeer noquery"

  - name: geerlingguy.firewall
    version: "2.0.0"
    source: "https://galaxy.ansible.com"
    verify_ssl_cert: true
    # COMMENT: Firewall configuration with minimal exposure
    vars:
      firewall_allowed_tcp_ports:
        - "22"    # SSH
        - "80"    # HTTP
        - "443"   # HTTPS
        - "8080"  # Traefik
      firewall_allowed_udp_ports: []
      firewall_log_dropped_packets: true

  # COMMENT: Database and storage roles
  - name: geerlingguy.mysql
    version: "3.0.0"
    source: "https://galaxy.ansible.com"
    verify_ssl_cert: true
    # COMMENT: MySQL configuration with security
    vars:
      mysql_root_password: "{{ vault_mysql_root_password }}"
      mysql_databases:
        - name: "{{ item.name }}"
          encoding: "utf8mb4"
          collation: "utf8mb4_unicode_ci"
      mysql_users:
        - name: "{{ item.name }}"
          password: "{{ item.password }}"
          priv: "{{ item.priv }}"
          host: "{{ item.host | default('localhost') }}"

  - name: geerlingguy.redis
    version: "1.0.0"
    source: "https://galaxy.ansible.com"
    verify_ssl_cert: true
    # COMMENT: Redis configuration with security
    vars:
      redis_bind: "127.0.0.1"
      redis_protected_mode: "yes"
      redis_requirepass: "{{ vault_redis_password }}"
      redis_maxmemory: "256mb"
      redis_maxmemory_policy: "allkeys-lru"

  # COMMENT: Web and proxy roles
  - name: geerlingguy.nginx
    version: "3.0.0"
    source: "https://galaxy.ansible.com"
    verify_ssl_cert: true
    # COMMENT: Nginx configuration with security headers
    vars:
      nginx_vhosts:
        - server_name: "{{ domain }}"
          root: "/var/www/html"
          template: "{{ playbook_dir }}/templates/nginx_vhost.j2"
          ssl: true
          ssl_certificate: "/etc/letsencrypt/live/{{ domain }}/fullchain.pem"
          ssl_certificate_key: "/etc/letsencrypt/live/{{ domain }}/privkey.pem"
      nginx_remove_default_vhost: true
      nginx_worker_processes: "{{ ansible_processor_cores }}"

  - name: geerlingguy.certbot
    version: "3.0.0"
    source: "https://galaxy.ansible.com"
    verify_ssl_cert: true
    # COMMENT: SSL certificate management
    vars:
      certbot_auto_renew: true
      certbot_auto_renew_user: "{{ ansible_user }}"
      certbot_auto_renew_minute: "0"
      certbot_auto_renew_hour: "3"
      certbot_auto_renew_options: "--quiet --no-self-upgrade"

  # COMMENT: Backup and monitoring roles
  - name: geerlingguy.backup
    version: "1.0.0"
    source: "https://galaxy.ansible.com"
    verify_ssl_cert: true
    # COMMENT: Backup configuration with encryption
    vars:
      backup_dest: "/var/backups/ansible-homelab"
      backup_encrypt: true
      backup_encrypt_password: "{{ vault_backup_encryption_key }}"
      backup_retention_days: 30
      backup_compress: true

# COMMENT: Additional production requirements
# COMMENT: Ensure all collections and roles are from trusted sources
# COMMENT: Verify SSL certificates for all downloads
# COMMENT: Use specific version ranges for stability
# COMMENT: Implement security hardening for all services
