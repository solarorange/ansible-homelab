enhance_docs_logging_homepage.txt




## 1. **Automated Port Conflict Validation**

**Prompt:**
Search all Ansible variable files, Docker Compose templates, and service configuration files for port assignments.  
Write a script or Ansible task that checks for duplicate port assignments among all enabled services.  
The script should output a list of any conflicting ports and the services involved, and fail the deployment if any are found.

---

## 2. **Static Analysis for Error Propagation in Scripts**

**Prompt:**
> Run static analysis tools (`flake8` for Python, `shellcheck` for shell scripts) on all scripts in the `scripts/` and `homepage/scripts/` directories.  
> For each script, ensure that all error conditions are either logged and/or cause the script to exit with a non-zero status.  
> Update any scripts that only log errors but do not exit or propagate the error to also exit with a failure code.  
> For Ansible tasks, ensure that any critical failure uses `ansible.builtin.fail` to halt the playbook.

---

## 3. **Audit and Standardize Logging for Completeness**

**Prompt:**
> Audit all Python, shell scripts, and Ansible tasks for logging coverage.  
> For each script or task, ensure that every error, exception, or critical action is logged with sufficient context (service name, action, timestamp).  
> For Docker services, verify that Loki scraping labels are present in all Compose files.  
> For systemd and non-Docker services, ensure Promtail is configured to scrape their logs.  
> Standardize log message formats across all scripts and tasks for consistency.

---

## 4. **Automated Certificate Renewal and Alert Validation**

**Prompt:**
> Review all certificate management scripts and playbooks.  
> Add or verify automated tests that simulate certificate expiry and renewal, ensuring that failures are detected and alerts are triggered.  
> Ensure that all certificate renewal failures are logged and result in a notification or alert, not just a log entry.

---

## 5. **Automated DNS, Firewall, and Certificate Health Checks**

**Prompt:**
> Create or update Ansible validation tasks to automatically check that:
> - All required DNS records exist and resolve to the correct IPs.
> - Firewall rules allow access to all intended service ports and block unintended ones.
> - Each public domain serves a valid, non-expired certificate matching the domain.
> Fail the deployment if any of these checks do not pass.

---

## 6. **Documentation and Manual Override Safeguards**

**Prompt:**
> Update documentation to clearly describe the risks of manual overrides for ports, certificates, and service enablement.  
> Where possible, add Ansible warnings or pre-tasks that detect manual overrides and require explicit user confirmation before proceeding.

---

**How to Use:**  
Copy and paste each prompt into Cursor, and execute or adapt as needed for your workflow.  
These prompts are designed to be actionable and to drive concrete improvements in production readiness. If you want a specific implementation for any of these (e.g., a port conflict checker script), just ask!
