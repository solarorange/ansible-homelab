---
# Paperless-ngx Prerequisites Setup
# Setup required directories, permissions, and dependencies

- name: Create Paperless-ngx directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: "0755"
  loop:
    - "{{ docker_dir }}/paperless-ngx"
    - "{{ docker_dir }}/paperless-ngx/config"
    - "{{ docker_dir }}/paperless-ngx/data"
    - "{{ docker_dir }}/paperless-ngx/media"
    - "{{ docker_dir }}/paperless-ngx/export"
    - "{{ docker_dir }}/paperless-ngx/backup"
    - "{{ docker_dir }}/paperless-ngx/logs"
    - "{{ docker_dir }}/paperless-ngx/consume"
    - "{{ docker_dir }}/paperless-ngx/trash"
    - "{{ docker_dir }}/paperless-ngx/temp"
  tags: [paperless-ngx, setup]

- name: Create Paperless-ngx configuration directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: "0755"
  loop:
    - "{{ config_dir }}/paperless-ngx"
    - "{{ config_dir }}/paperless-ngx/nginx"
    - "{{ config_dir }}/paperless-ngx/ssl"
    - "{{ config_dir }}/paperless-ngx/custom"
  tags: [paperless-ngx, setup]

- name: Create Paperless-ngx data directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: "0755"
  loop:
    - "{{ data_dir }}/paperless-ngx"
    - "{{ data_dir }}/paperless-ngx/documents"
    - "{{ data_dir }}/paperless-ngx/thumbnails"
    - "{{ data_dir }}/paperless-ngx/archive"
    - "{{ data_dir }}/paperless-ngx/originals"
  tags: [paperless-ngx, setup]

- name: Create Paperless-ngx backup directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: "0755"
  loop:
    - "{{ backup_dir }}/paperless-ngx"
    - "{{ backup_dir }}/paperless-ngx/database"
    - "{{ backup_dir }}/paperless-ngx/media"
    - "{{ backup_dir }}/paperless-ngx/config"
  tags: [paperless-ngx, setup]

- name: Create Paperless-ngx log directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: "0755"
  loop:
    - "{{ logs_dir }}/paperless-ngx"
    - "{{ logs_dir }}/paperless-ngx/nginx"
    - "{{ logs_dir }}/paperless-ngx/application"
    - "{{ logs_dir }}/paperless-ngx/ocr"
  tags: [paperless-ngx, setup]

- name: Set proper permissions for Paperless-ngx directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: "0755"
    recurse: true
  loop:
    - "{{ docker_dir }}/paperless-ngx"
    - "{{ config_dir }}/paperless-ngx"
    - "{{ data_dir }}/paperless-ngx"
    - "{{ backup_dir }}/paperless-ngx"
    - "{{ logs_dir }}/paperless-ngx"
  tags: [paperless-ngx, setup]

- name: Create Paperless-ngx database if using PostgreSQL
  block:
    - name: Create PostgreSQL database for Paperless-ngx
      community.postgresql.postgresql_db:
        name: "{{ paperless_ngx_database_name }}"
        state: present
        login_host: "{{ paperless_ngx_database_host }}"
        login_port: "{{ paperless_ngx_database_port }}"
        login_user: "{{ postgresql_admin_user | default('postgres') }}"
        login_password: "{{ postgresql_admin_password | default('') }}"
        encoding: UTF8
        template: template0
        lc_collate: en_US.UTF-8
        lc_ctype: en_US.UTF-8

    - name: Create PostgreSQL user for Paperless-ngx
      community.postgresql.postgresql_user:
        name: "{{ paperless_ngx_database_user }}"
        password: "{{ paperless_ngx_database_password }}"
        login_host: "{{ paperless_ngx_database_host }}"
        login_port: "{{ paperless_ngx_database_port }}"
        login_user: "{{ postgresql_admin_user | default('postgres') }}"
        login_password: "{{ postgresql_admin_password | default('') }}"
        state: present
        priv: "ALL"
        db: "{{ paperless_ngx_database_name }}"

  when: paperless_ngx_database_type == "postgresql"
  tags: [paperless-ngx, setup]

- name: Create Paperless-ngx environment file
  ansible.builtin.template:
    src: env.j2
    dest: "{{ docker_dir }}/paperless-ngx/.env"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: "0640"
  tags: [paperless-ngx, setup]

- name: Create Paperless-ngx configuration files
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: "{{ item.mode | default('0644') }}"
  loop:
    - { src: "docker-compose.yml.j2", dest: "{{ docker_dir }}/paperless-ngx/docker-compose.yml" }
    - { src: "nginx.conf.j2", dest: "{{ config_dir }}/paperless-ngx/nginx/nginx.conf", mode: "0644" }
    - { src: "paperless.conf.j2", dest: "{{ config_dir }}/paperless-ngx/paperless.conf", mode: "0644" }
  tags: [paperless-ngx, setup]

- name: Create Paperless-ngx health check script
  ansible.builtin.template:
    src: healthcheck.sh.j2
    dest: "{{ docker_dir }}/paperless-ngx/healthcheck.sh"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: "0755"
  tags: [paperless-ngx, setup]

- name: Create Paperless-ngx backup script
  ansible.builtin.template:
    src: backup.sh.j2
    dest: "{{ docker_dir }}/paperless-ngx/backup.sh"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: "0755"
  tags: [paperless-ngx, setup]

- name: Create Paperless-ngx restore script
  ansible.builtin.template:
    src: restore.sh.j2
    dest: "{{ docker_dir }}/paperless-ngx/restore.sh"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: "0755"
  tags: [paperless-ngx, setup]

- name: Create Paperless-ngx maintenance script
  ansible.builtin.template:
    src: maintenance.sh.j2
    dest: "{{ docker_dir }}/paperless-ngx/maintenance.sh"
    owner: "{{ username }}"
    group: "{{ username }}"
    mode: "0755"
  tags: [paperless-ngx, setup]

- name: Create Paperless-ngx logrotate configuration
  ansible.builtin.template:
    src: logrotate.conf.j2
    dest: "/etc/logrotate.d/paperless-ngx"
    owner: root
    group: root
    mode: "0644"
  become: true
  tags: [paperless-ngx, setup]

- name: Create Paperless-ngx systemd service file
  ansible.builtin.template:
    src: paperless-ngx.service.j2
    dest: "/etc/systemd/system/paperless-ngx.service"
    owner: root
    group: root
    mode: "0644"
  become: true
  tags: [paperless-ngx, setup]

- name: Create Paperless-ngx systemd timer for maintenance
  ansible.builtin.template:
    src: paperless-ngx-maintenance.timer.j2
    dest: "/etc/systemd/system/paperless-ngx-maintenance.timer"
    owner: root
    group: root
    mode: "0644"
  become: true
  tags: [paperless-ngx, setup]

- name: Create Paperless-ngx systemd service for maintenance
  ansible.builtin.template:
    src: paperless-ngx-maintenance.service.j2
    dest: "/etc/systemd/system/paperless-ngx-maintenance.service"
    owner: root
    group: root
    mode: "0644"
  become: true
  tags: [paperless-ngx, setup]

- name: Reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: true
  become: true
  tags: [paperless-ngx, setup]

- name: Enable and start Paperless-ngx maintenance timer
  ansible.builtin.systemd:
    name: "paperless-ngx-maintenance.timer"
    enabled: true
    state: started
  become: true
  tags: [paperless-ngx, setup] 