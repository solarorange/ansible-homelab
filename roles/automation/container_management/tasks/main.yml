---
# Container Management (Watchtower) Tasks

- name: Deploy Watchtower stack
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ docker_dir }}/watchtower/docker-compose.yml"
    owner: "{{ automation_username }}"
    group: "{{ automation_username }}"
    mode: "0644"
  when: watchtower_enabled | default(true)

- name: Start Watchtower stack
  community.docker.docker_compose:
    project_src: "{{ docker_dir }}/watchtower"
    state: present
    restarted: true
  when: watchtower_enabled | default(true)

- name: Ensure Watchtower log rotation
  ansible.builtin.copy:
    src: roles/logging/templates/logrotate.conf.j2
    dest: "{{ docker_dir }}/watchtower/config/logrotate.conf"
    owner: "{{ automation_username }}"
    group: "{{ automation_username }}"
    mode: "0644"
  when: watchtower_log_rotation | default(true)

- name: Schedule Watchtower log rotation
  ansible.builtin.cron:
    name: "Rotate Watchtower logs"
    job: "logrotate {{ docker_dir }}/watchtower/config/logrotate.conf"
    user: "{{ vault_automation_user }}"
    minute: "0"
    hour: "*/6"
  when: watchtower_log_rotation | default(true)

- name: Create Watchtower directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ automation_username }}"
    group: "{{ automation_username }}"
    mode: "0755"
  loop:
    - "{{ docker_dir }}/watchtower/config"
    - "{{ docker_dir }}/watchtower/secrets"
    - "{{ logs_dir }}/watchtower"
    - "{{ data_dir }}/watchtower"

- name: Deploy Watchtower stack docker-compose
  ansible.builtin.copy:
    dest: "{{ docker_dir }}/watchtower/docker-compose.yml"
    content: |
      version: '3.8'
      
      networks:
        homelab:
          external: true
        monitoring:
          external: true
        media:
          external: true
        security:
          external: true
        automation:
          external: true
        storage:
          external: true
        development:
          external: true
      
      services:
        traefik:
          image: traefik:v2.10
          container_name: traefik
          user: "{{ vault_automation_user }}"
          read_only: true
          security_opt:
            - no-new-privileges:true
          deploy:
            resources:
              limits:
                cpus: '1.0'
                memory: 1G
              reservations:
                cpus: '0.2'
                memory: 256M
          tmpfs:
            - /tmp
          environment:
            - TZ={{ timezone }}
          volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - {{ docker_dir }}/watchtower/config/traefik:/etc/traefik:ro
            - {{ logs_dir }}/watchtower/traefik:/logs
          restart: unless-stopped
          networks:
            - homelab
          labels:
            - "traefik.enable=true"
            - "traefik.docker.network=homelab"
            - "traefik.http.routers.traefik.rule=Host(`traefik.{{ domain }}`)"
            - "traefik.http.routers.traefik.entrypoints=websecure"
            - "traefik.http.routers.traefik.tls=true"
            - "traefik.http.routers.traefik.tls.certresolver=cloudflare"
            - "traefik.http.services.traefik.loadbalancer.server.port=8080"
            - "traefik.http.middlewares.traefik-auth.forwardauth.address=http://authentik:9000/outpost.goauthentik.io/auth/traefik"
            - "traefik.http.middlewares.traefik-auth.forwardauth.trustForwardHeader=true"
            - "traefik.http.routers.traefik.middlewares=traefik-auth"
          healthcheck:
            test: ["CMD", "curl", "-f", "http://{{ ansible_default_ipv4.address }}:8080/ping"]
            interval: 30s
            timeout: 10s
            retries: 3
        # ... (all other services from tasks/watchtower.yml, lines 61-830, should be included here)
    mode: '0644'

- name: Ensure Watchtower stack is running
  ansible.builtin.command: docker-compose -f {{ docker_dir }}/watchtower/docker-compose.yml up -d
  args:
    chdir: "{{ docker_dir }}/watchtower"

- name: Configure Watchtower
  ansible.builtin.lineinfile:
    path: "{{ docker_dir }}/automation/docker-compose.yml"
    line: "      - WATCHTOWER_SCHEDULE={{ watchtower_update_schedule }}"
    insertafter: "environment:"
  when: watchtower_enabled | default(true)

- name: Deploy container updater service
  community.docker.docker_container:
    name: container-updater
    image: containrrr/watchtower
    state: started
    restart_policy: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      - "--schedule"
      - "{{ container_updater_schedule }}"
      - "--cleanup"
      - "--log-level"
      - "{{ container_updater_log_level }}"
  when: container_updater_enabled | default(true) 