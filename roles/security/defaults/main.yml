---
# Security Role Configuration
# Enhanced with comprehensive security, automation, and vault integration

# =============================================================================
# SECURITY SERVICE CONFIGURATION
# =============================================================================

# Service Information
security_service_name: "security"
security_container_name: "{{ security_service_name }}"
security_image: "ghcr.io/security/security:latest"
security_version: "latest"

# Network Configuration
security_port: 8080
security_external_port: "{{ security_port }}"
security_protocol: "http"
security_host: "{{ ansible_default_ipv4.address }}"
security_url: "{{ security_protocol }}://{{ security_host }}:{{ security_port }}"

# Domain Configuration
security_subdomain: "security"
security_domain: "{{ security_subdomain }}.{{ domain }}"
security_external_url: "https://{{ security_domain }}"

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Authentication
security_auth_enabled: true
security_auth_method: "authentik"  # Options: basic, authentik, none
security_admin_username: "admin"
security_admin_password: "{{ vault_security_admin_password }}"

# API Configuration
security_api_key: "{{ vault_security_api_key }}"
security_api_token: "{{ vault_security_api_token }}"

# Encryption & Security
security_secret_key: "{{ vault_security_secret_key }}"
security_encryption_key: "{{ vault_security_encryption_key }}"
security_jwt_secret: "{{ vault_security_jwt_secret }}"

# SSL/TLS Configuration
security_ssl_enabled: true
security_ssl_cert: "{{ vault_ssl_certificate | default('') }}"
security_ssl_key: "{{ vault_ssl_private_key | default('') }}"
security_ssl_email: "{{ vault_ssl_email | default('admin@' + domain) }}"

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# Database Settings
security_database_type: "postgresql"  # Options: sqlite, postgresql, mysql
security_database_host: "{{ databases_postgresql_host | default('postgresql') }}"
security_database_port: "{{ databases_postgresql_port | default(5432) }}"
security_database_name: "security"
security_database_username: "security"
security_database_password: "{{ vault_security_database_password }}"

# Redis Configuration (if using)
security_redis_enabled: false
security_redis_host: "{{ redis_host | default('redis') }}"
security_redis_port: "{{ redis_port | default(6379) }}"
security_redis_password: "{{ vault_security_redis_password }}"
security_redis_database: 0

# =============================================================================
# STORAGE CONFIGURATION
# =============================================================================

# Data Directories
security_data_dir: "{{ homelab_data_dir }}/security"
security_config_dir: "{{ security_data_dir }}/config"
security_backup_dir: "{{ security_data_dir }}/backups"

# Volume Mappings
security_volumes:
  - "{{ security_config_dir }}:/config"
  - "{{ security_backup_dir }}:/backups"
  - "/etc/localtime:/etc/localtime:ro"

# =============================================================================
# MONITORING & HEALTH CHECKS
# =============================================================================

# Health Check Configuration
security_health_check_enabled: true
security_health_check_path: "/health"
security_health_check_interval: 30
security_health_check_timeout: 10
security_health_check_retries: 3

# Monitoring Integration
security_monitoring_enabled: true
security_prometheus_enabled: true
security_grafana_enabled: true

# =============================================================================
# BACKUP & RECOVERY
# =============================================================================

# Backup Configuration
security_backup_enabled: true
security_backup_schedule: "0 2 * * *"  # Daily at 2 AM
security_backup_retention_days: 30
security_backup_encryption_enabled: true
security_backup_encryption_key: "{{ vault_backup_encryption_key }}"

# =============================================================================
# NOTIFICATION CONFIGURATION
# =============================================================================

# Email Notifications
security_smtp_enabled: false
security_smtp_host: "{{ smtp_host | default('') }}"
security_smtp_port: "{{ smtp_port | default(587) }}"
security_smtp_username: "{{ vault_smtp_username }}"
security_smtp_password: "{{ vault_security_smtp_password }}"
security_smtp_from: "{{ security_admin_email | default('admin@' + domain) }}"
security_smtp_to: "{{ admin_email | default('admin@' + domain) }}"

# Webhook Notifications
security_webhook_enabled: false
security_webhook_url: "{{ vault_webhook_url | default('') }}"
security_webhook_secret: "{{ vault_webhook_secret | default('') }}"

# =============================================================================
# INTEGRATION CONFIGURATION
# =============================================================================

# Service Discovery
security_discovery_enabled: true
security_discovery_services:
  - name: "grafana"
    url: "{{ grafana_external_url | default('') }}"
    api_key: "{{ vault_grafana_api_key }}"
  - name: "prometheus"
    url: "{{ prometheus_external_url | default('') }}"
    api_key: "{{ vault_prometheus_api_key }}"

# =============================================================================
# PERFORMANCE & OPTIMIZATION
# =============================================================================

# Resource Limits
security_cpu_limit: "1.0"
security_memory_limit: "1g"
security_memory_reservation: "512m"

# Performance Settings
security_scan_interval: 10
security_parallel_downloads: 3
security_auto_download_enabled: true

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log Settings
security_log_level: "info"  # Options: trace, debug, info, warn, error
security_log_rotation_enabled: true
security_log_retention_days: 30

# =============================================================================
# SECURITY HEADERS & WAF
# =============================================================================

# Security Headers
security_security_headers:
  X-Frame-Options: "SAMEORIGIN"
  X-Content-Type-Options: "nosniff"
  X-XSS-Protection: "1; mode=block"
  Referrer-Policy: "strict-origin-when-cross-origin"
  Content-Security-Policy: "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline';"
  Strict-Transport-Security: "max-age=31536000; includeSubDomains; preload"
  Permissions-Policy: "geolocation=(), microphone=(), camera=()"

# Rate Limiting
security_rate_limit_enabled: true
security_rate_limit_requests: 100
security_rate_limit_window: 60

# =============================================================================
# DEPLOYMENT CONFIGURATION
# =============================================================================

# Deployment Settings
security_deploy_enabled: true
security_deploy_method: "docker"  # Options: docker, docker-compose, kubernetes
security_restart_policy: "unless-stopped"
security_auto_update_enabled: true

# Environment Variables
security_environment:
  PUID: "{{ ansible_user_id | default(1000) }}"
  PGID: "{{ ansible_group_id | default(1000) }}"
  TZ: "{{ timezone | default('UTC') }}"
  SECURITY_API_KEY: "{{ security_api_key }}"
  SECURITY_SECRET_KEY: "{{ security_secret_key }}"
  SECURITY_ENCRYPTION_KEY: "{{ security_encryption_key }}"
  SECURITY_JWT_SECRET: "{{ security_jwt_secret }}"

# =============================================================================
# VALIDATION & TESTING
# =============================================================================

# Validation Settings
security_validation_enabled: true
security_validation_timeout: 300
security_validation_retries: 3

# Testing Configuration
security_test_enabled: false
security_test_items: 3

# =============================================================================
# COMPLIANCE & GOVERNANCE
# =============================================================================

# Compliance Settings
security_compliance_enabled: true
security_audit_logging_enabled: true
security_access_logging_enabled: true

# =============================================================================
# AUTOMATION CONFIGURATION
# =============================================================================

# Automation Scripts
security_automation_enabled: true
security_automation_scripts:
  - name: "health_check"
    script: "health_check.py"
    schedule: "*/5 * * * *"
  - name: "backup"
    script: "backup.py"
    schedule: "0 2 * * *"
  - name: "cleanup"
    script: "cleanup.py"
    schedule: "0 3 * * *"

# =============================================================================
# DEFAULTS & FALLBACKS
# =============================================================================

# Default Values
security_admin_email: "{{ admin_email | default('admin@' + domain) }}"
security_monitoring_email: "{{ monitoring_email | default('monitoring@' + domain) }}"

# Fallback Configuration
security_fallback_enabled: true
security_fallback_services:
  - name: "grafana"
    url: "{{ grafana_url | default('') }}"
  - name: "prometheus"
    url: "{{ prometheus_url | default('') }}"

# =============================================================================
# SECRETS MANAGEMENT (FILES MOUNTED AT /run/secrets)
# =============================================================================

security_manage_secret_files: true

security_secret_files:
  - { name: "SECURITY_API_KEY", value: "{{ security_api_key | default('') }}" }
  - { name: "SECURITY_SECRET_KEY", value: "{{ security_secret_key | default('') }}" }
  - { name: "SECURITY_ENCRYPTION_KEY", value: "{{ security_encryption_key | default('') }}" }
  - { name: "SECURITY_JWT_SECRET", value: "{{ security_jwt_secret | default('') }}" }
  - { name: "SECURITY_DATABASE_PASSWORD", value: "{{ security_database_password | default('') }}" }
  - { name: "SECURITY_REDIS_PASSWORD", value: "{{ security_redis_password | default('') }}" }
  - { name: "SECURITY_SMTP_PASSWORD", value: "{{ security_smtp_password | default('') }}" }
  # Sub-role secrets consumed by security templates
  - { name: "AUTHENTIK_SECRET_KEY", value: "{{ vault_authentik_secret_key | default('') }}" }
  - { name: "POSTGRES_PASSWORD", value: "{{ vault_authentik_postgres_password | default('') }}" }
  - { name: "WEBPASSWORD", value: "{{ security_pihole.admin_password | default('') }}" }

security_required_secrets:
  - SECURITY_SECRET_KEY
  - SECURITY_ENCRYPTION_KEY
  - SECURITY_JWT_SECRET
  - SECURITY_DATABASE_PASSWORD
  - AUTHENTIK_SECRET_KEY
  - POSTGRES_PASSWORD
  - WEBPASSWORD

# Authentik sub-role advanced config generation (disabled by default)
security_authentik_custom_config_enabled: false
