---
# Linkwarden Configuration
# Production-ready defaults for Linkwarden bookmark management deployment

# Service Configuration
linkwarden_enabled: true
linkwarden_version: "latest"
linkwarden_network_name: "linkwarden"
linkwarden_network_external: true

# Container Configuration
linkwarden_container_restart_policy: "unless-stopped"
linkwarden_container_network_mode: "bridge"

# Port Configuration
linkwarden_port: 3002

# Domain Configuration
linkwarden_subdomain: "linkwarden"

# Authentication Configuration
linkwarden_auth_enabled: true
linkwarden_auth_method: "authentik"  # Options: authentik, basic, none
linkwarden_admin_email: "{{ admin_email | default('admin@' + domain) }}"

# Database Configuration
linkwarden_database_type: "postgresql"
linkwarden_database_host: "linkwarden-postgres"
linkwarden_database_port: 5432
linkwarden_database_name: "linkwarden"
linkwarden_database_user: "postgres"
linkwarden_database_password: "{{ vault_linkwarden_postgres_password | default('') }}"

# Service Components
linkwarden_components:
  app:
    enabled: true
    image: "ghcr.io/linkwarden/linkwarden:latest"
    container_name: "linkwarden-app"
    port: 3002
    volumes:
      - "{{ docker_dir }}/linkwarden/app:/app/data"
      - "{{ logs_dir }}/linkwarden/app:/app/logs"
    environment:
      - DATABASE_URL=postgresql://{{ linkwarden_database_user }}:{{ linkwarden_database_password }}@{{ linkwarden_database_host }}:{{ linkwarden_database_port }}/{{ linkwarden_database_name }}
      - NEXTAUTH_URL=https://{{ linkwarden_subdomain }}.{{ domain }}
      - NEXTAUTH_SECRET={{ vault_linkwarden_nextauth_secret | default('') }}
      - NODE_ENV=production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/api/health"]
      interval: "30s"
      timeout: "10s"
      retries: 3
    depends_on:
      - linkwarden-postgres
    resources:
      limits:
        cpus: '1'
        memory: 1G
      reservations:
        cpus: '0.25'
        memory: 256M

  postgres:
    enabled: true
    image: "postgres:15-alpine"
    container_name: "linkwarden-postgres"
    volumes:
      - "{{ docker_dir }}/linkwarden/postgres:/var/lib/postgresql/data"
      - "{{ logs_dir }}/linkwarden/postgres:/logs"
    environment:
      - POSTGRES_USER={{ linkwarden_database_user }}
      - POSTGRES_PASSWORD={{ linkwarden_database_password }}
      - POSTGRES_DB={{ linkwarden_database_name }}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U {{ linkwarden_database_user }}"]
      interval: "30s"
      timeout: "10s"
      retries: 3
    resources:
      limits:
        cpus: '0.5'
        memory: 1G
      reservations:
        cpus: '0.1'
        memory: 256M

# Monitoring Integration
linkwarden_monitoring_enabled: true
linkwarden_metrics_enabled: true
linkwarden_health_check_enabled: true
linkwarden_health_check_interval: 30

# Security Configuration
linkwarden_security_headers: true
linkwarden_rate_limiting: true
linkwarden_rate_limit_requests: 100
linkwarden_rate_limit_window: 60
linkwarden_cors_enabled: false
linkwarden_cors_origins: []
linkwarden_allow_anonymous_access: false

# Backup Configuration
linkwarden_backup_enabled: true
linkwarden_backup_schedule: "0 2 * * *"  # Daily at 2 AM
linkwarden_backup_retention: 7  # Keep backups for 7 days
linkwarden_backup_compression: true
linkwarden_backup_include_database: true
linkwarden_backup_include_config: true
linkwarden_backup_dir: "{{ backup_dir }}/linkwarden"
linkwarden_backup_retention_days: 7
linkwarden_backup_log_file: "{{ logs_dir }}/linkwarden/backup/backup.log"
linkwarden_backup_max_log_size: "10M"
linkwarden_backup_notifications_enabled: true

# Logging Configuration
linkwarden_log_level: "info"  # Options: debug, info, warn, error
linkwarden_log_format: "json"
linkwarden_log_retention: 30  # Days
linkwarden_log_rotation: true
linkwarden_health_check_log_file: "{{ logs_dir }}/linkwarden/health/health.log"
linkwarden_health_check_max_log_size: "10M"
linkwarden_health_check_retention_days: 7
linkwarden_health_check_timeout: 30

# Resource Limits
linkwarden_memory_limit: "2g"
linkwarden_cpu_limit: "2.0"
linkwarden_storage_limit: "100g"

# Traefik Configuration
linkwarden_traefik_enabled: true
linkwarden_traefik_network: "{{ traefik_network | default('homelab') }}"
linkwarden_traefik_middleware: "secure-headers,compress"
linkwarden_traefik_auth_middleware: "authentik@docker"
linkwarden_traefik_ssl_enabled: true
linkwarden_traefik_ssl_resolver: "{{ traefik_ssl_resolver | default('cloudflare') }}"

# Homepage Integration
linkwarden_homepage_enabled: true
linkwarden_homepage_category: "Productivity"
linkwarden_homepage_description: "Bookmark Management & Organization"
linkwarden_homepage_icon: "linkwarden.png"
linkwarden_homepage_widget_enabled: true

# Telegraf Integration
linkwarden_telegraf_enabled: true
linkwarden_telegraf_metrics: true
linkwarden_telegraf_logs: true

# Prometheus Integration
linkwarden_prometheus_enabled: true
linkwarden_prometheus_metrics: true
linkwarden_prometheus_scrape_interval: 30

# Grafana Integration
linkwarden_grafana_enabled: true
linkwarden_grafana_dashboard: true
linkwarden_grafana_datasource: "prometheus"

# Loki Integration
linkwarden_loki_enabled: true
linkwarden_loki_logs: true

# Alerting Configuration
linkwarden_alerting_enabled: true
linkwarden_alerting_provider: "alertmanager"
linkwarden_alerting_webhook: "http://alertmanager:9093/api/v1/alerts"

# CrowdSec Integration
linkwarden_crowdsec_enabled: true
linkwarden_crowdsec_collections:
  - "crowdsecurity/nginx"
  - "crowdsecurity/http-cve"

# Fail2ban Integration
linkwarden_fail2ban_enabled: true
linkwarden_fail2ban_jail: "linkwarden"
linkwarden_fail2ban_max_retry: 5
linkwarden_fail2ban_bantime: 3600

# Service Dependencies
linkwarden_dependencies:
  - "docker"
  - "traefik"
  - "monitoring_infrastructure"

# Health Check Configuration
linkwarden_health_check_url: "/api/health"
linkwarden_health_check_timeout: 10
linkwarden_health_check_retries: 3

# Service configuration directories
linkwarden_config_dir: "{{ docker_dir }}/linkwarden"
linkwarden_app_config_dir: "{{ docker_dir }}/linkwarden/app"
linkwarden_postgres_config_dir: "{{ docker_dir }}/linkwarden/postgres"

# Service container names
linkwarden_app_container_name: "linkwarden-app"
linkwarden_postgres_container_name: "linkwarden-postgres"

# Service ports
linkwarden_app_port: 3002 