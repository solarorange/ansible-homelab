---
# Romm Deployment Tasks

- name: Create Romm directories
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  loop:
    - "{{ docker_data_root }}/romm"
    - "{{ docker_config_root }}/romm"
    - "{{ docker_logs_root }}/romm"
    - "{{ docker_backup_root }}/romm"
  tags: [romm, deploy]

- name: Generate Romm environment file
  template:
    src: env.j2
    dest: "{{ docker_config_root }}/romm/.env"
    mode: '0644'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  notify: restart romm
  tags: [romm, deploy]

- name: Deploy Romm Docker Compose
  template:
    src: docker-compose.yml.j2
    dest: "{{ docker_root }}/romm/docker-compose.yml"
    mode: '0644'
  notify: restart romm
  tags: [romm, deploy]

- name: Start Romm services
  community.docker.docker_compose:
    project_src: "{{ docker_root }}/romm"
    state: present
  tags: [romm, deploy]

- name: Wait for Romm to be ready
  uri:
    url: "http://{{ ansible_default_ipv4.address }}:{{ romm_external_port }}"
    status_code: [200, 302, 401, 403]
  register: result
  until: result.status in [200, 302, 401, 403]
  retries: 30
  delay: 10
  tags: [romm, deploy]

- name: Configure Romm authentication
  block:
    - name: Create Romm admin user
      uri:
        url: "http://{{ ansible_default_ipv4.address }}:{{ romm_external_port }}/api/v1/auth/register"
        method: POST
        headers:
          Content-Type: "application/json"
        body_format: json
        body:
          email: "{{ romm_admin_email }}"
          password: "{{ vault_romm_password }}"
          name: "Admin"
        status_code: [200, 201, 409]  # 409 if user already exists
      when: romm_auth_enabled | default(true)
      tags: [romm, deploy, auth]

    - name: Configure Romm API key
      uri:
        url: "http://{{ ansible_default_ipv4.address }}:{{ romm_external_port }}/api/v1/auth/api-key"
        method: POST
        headers:
          Content-Type: "application/json"
          Authorization: "Bearer {{ vault_romm_api_key }}"
        body_format: json
        body:
          name: "Ansible Generated"
          key: "{{ vault_romm_api_key }}"
        status_code: [200, 201, 409]  # 409 if key already exists
      when: romm_api_enabled | default(true)
      tags: [romm, deploy, auth]
  when: romm_enabled | default(true)
  tags: [romm, deploy, auth]
