#!/bin/bash
# DumbAssets Backup Script
# Generated by Ansible - Do not edit manually

set -euo pipefail

# Configuration
SERVICE_NAME="dumbassets"
CONTAINER_NAME="{{ dumbassets_container_name }}"
DATA_DIR="{{ dumbassets_data_dir }}"
BACKUP_DIR="{{ dumbassets_backup_dir }}"
RETENTION_DAYS={{ dumbassets_backup_retention_days }}
COMPRESSION={{ dumbassets_backup_compression | lower }}
ENCRYPTION={{ dumbassets_backup_encryption | lower }}

# Timestamp
TIMESTAMP=$(date +%Y%m%d_%H%M%S)
BACKUP_FILE="${BACKUP_DIR}/daily/${SERVICE_NAME}_${TIMESTAMP}.tar.gz"

# Logging
LOG_FILE="${BACKUP_DIR}/logs/backup_${TIMESTAMP}.log"
exec 1> >(tee -a "$LOG_FILE")
exec 2> >(tee -a "$LOG_FILE" >&2)

echo "Starting ${SERVICE_NAME} backup at $(date)"

# Create backup directories if they don't exist
mkdir -p "${BACKUP_DIR}/daily"
mkdir -p "${BACKUP_DIR}/logs"

# Stop the service before backup
echo "Stopping ${SERVICE_NAME} service..."
docker-compose -f "{{ dumbassets_docker_dir }}/docker-compose.yml" stop

# Wait for service to stop
sleep 10

# Create backup
echo "Creating backup of ${DATA_DIR}..."
if [ "$COMPRESSION" = "true" ]; then
    tar -czf "${BACKUP_FILE}" -C "$(dirname "${DATA_DIR}")" "$(basename "${DATA_DIR}")"
else
    tar -cf "${BACKUP_FILE%.gz}" -C "$(dirname "${DATA_DIR}")" "$(basename "${DATA_DIR}")"
fi

# Verify backup
if [ -f "${BACKUP_FILE}" ] && [ -s "${BACKUP_FILE}" ]; then
    echo "Backup created successfully: ${BACKUP_FILE}"
    echo "Backup size: $(du -h "${BACKUP_FILE}" | cut -f1)"
else
    echo "ERROR: Backup creation failed!"
    exit 1
fi

# Start the service after backup
echo "Starting ${SERVICE_NAME} service..."
docker-compose -f "{{ dumbassets_docker_dir }}/docker-compose.yml" start

# Wait for service to start
sleep 30

# Verify service is running
if docker ps | grep -q "${CONTAINER_NAME}"; then
    echo "Service started successfully"
else
    echo "ERROR: Service failed to start!"
    exit 1
fi

# Cleanup old backups
echo "Cleaning up backups older than ${RETENTION_DAYS} days..."
find "${BACKUP_DIR}/daily" -name "${SERVICE_NAME}_*.tar.gz" -mtime +${RETENTION_DAYS} -delete

echo "Backup completed successfully at $(date)" 