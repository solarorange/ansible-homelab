#!/bin/bash
# DumbAssets Backup Retention Script
# Generated by Ansible - Do not edit manually

set -euo pipefail

# Configuration
SERVICE_NAME="dumbassets"
BACKUP_DIR="{{ dumbassets_backup_dir }}"
RETENTION_DAYS={{ dumbassets_backup_retention_days }}

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo "$(date): Starting ${SERVICE_NAME} backup retention cleanup..."

# Clean up old daily backups
echo "Cleaning up daily backups older than ${RETENTION_DAYS} days..."
find "${BACKUP_DIR}/daily" -name "${SERVICE_NAME}_*.tar.gz" -mtime +${RETENTION_DAYS} -delete 2>/dev/null || true

# Clean up old weekly backups (keep 4 weeks)
echo "Cleaning up weekly backups older than 4 weeks..."
find "${BACKUP_DIR}/weekly" -name "${SERVICE_NAME}_*.tar.gz" -mtime +28 -delete 2>/dev/null || true

# Clean up old monthly backups (keep 12 months)
echo "Cleaning up monthly backups older than 12 months..."
find "${BACKUP_DIR}/monthly" -name "${SERVICE_NAME}_*.tar.gz" -mtime +365 -delete 2>/dev/null || true

# Clean up old log files (keep 7 days)
echo "Cleaning up log files older than 7 days..."
find "${BACKUP_DIR}/logs" -name "*.log" -mtime +7 -delete 2>/dev/null || true

# Clean up old pre-restore backups (keep 7 days)
echo "Cleaning up pre-restore backups older than 7 days..."
find "${BACKUP_DIR}" -name "pre_restore_*.tar.gz" -mtime +7 -delete 2>/dev/null || true

echo -e "${GREEN}Backup retention cleanup completed successfully${NC}" 