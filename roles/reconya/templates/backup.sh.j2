#!/bin/bash
# Reconya Backup Script
# Generated by Ansible - Do not edit manually

set -euo pipefail

# Configuration
SERVICE_NAME="reconya"
BACKUP_DIR="{{ reconya_backup_dir }}"
DATA_DIR="{{ reconya_data_dir }}"
CONFIG_DIR="{{ reconya_config_dir }}"
LOG_FILE="{{ reconya_backup_log_file }}"
RETENTION_DAYS="{{ reconya_backup_retention_days | default(7) }}"
COMPRESSION="{{ reconya_backup_compression | default(true) }}"

# Timestamp for backup file
TIMESTAMP=$(date +%Y%m%d_%H%M%S)
BACKUP_FILE="$BACKUP_DIR/reconya_backup_$TIMESTAMP.tar.gz"

# Logging function
log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" | tee -a "$LOG_FILE"
}

# Error handling
error_exit() {
    log "ERROR: $1"
    exit 1
}

# Check prerequisites
check_prerequisites() {
    log "Checking backup prerequisites..."
    
    # Check if backup directory exists
    if [ ! -d "$BACKUP_DIR" ]; then
        error_exit "Backup directory $BACKUP_DIR does not exist"
    fi
    
    # Check if data directory exists
    if [ ! -d "$DATA_DIR" ]; then
        error_exit "Data directory $DATA_DIR does not exist"
    fi
    
    # Check if config directory exists
    if [ ! -d "$CONFIG_DIR" ]; then
        error_exit "Config directory $CONFIG_DIR does not exist"
    fi
    
    log "Prerequisites check passed"
}

# Create backup
create_backup() {
    log "Starting backup of $SERVICE_NAME..."
    
    # Stop the service before backup
    log "Stopping $SERVICE_NAME service..."
    cd "$CONFIG_DIR"
    docker-compose stop reconya-backend || log "WARNING: Failed to stop service"
    
    # Wait for service to stop
    sleep 10
    
    # Create backup archive
    log "Creating backup archive..."
    tar -czf "$BACKUP_FILE" \
        -C "$(dirname "$DATA_DIR")" "$(basename "$DATA_DIR")" \
        -C "$(dirname "$CONFIG_DIR")" "$(basename "$CONFIG_DIR")" \
        --exclude="*.tmp" \
        --exclude="*.log" \
        --exclude="*.cache" \
        2>> "$LOG_FILE" || error_exit "Failed to create backup archive"
    
    # Start the service after backup
    log "Starting $SERVICE_NAME service..."
    docker-compose start reconya-backend || log "WARNING: Failed to start service"
    
    # Verify backup file
    if [ -f "$BACKUP_FILE" ] && [ -s "$BACKUP_FILE" ]; then
        BACKUP_SIZE=$(du -h "$BACKUP_FILE" | cut -f1)
        log "SUCCESS: Backup created successfully - $BACKUP_FILE ($BACKUP_SIZE)"
    else
        error_exit "Backup file verification failed"
    fi
}

# Cleanup old backups
cleanup_old_backups() {
    log "Cleaning up backups older than $RETENTION_DAYS days..."
    
    find "$BACKUP_DIR" -name "reconya_backup_*.tar.gz" -mtime +$RETENTION_DAYS -delete
    
    log "Cleanup completed"
}

# Verify backup integrity
verify_backup() {
    log "Verifying backup integrity..."
    
    if tar -tzf "$BACKUP_FILE" > /dev/null 2>&1; then
        log "SUCCESS: Backup integrity verified"
    else
        error_exit "Backup integrity check failed"
    fi
}

# Main execution
main() {
    log "=== Starting $SERVICE_NAME backup process ==="
    
    check_prerequisites
    create_backup
    verify_backup
    cleanup_old_backups
    
    log "=== $SERVICE_NAME backup process completed successfully ==="
    exit 0
}

# Run main function
main "$@" 