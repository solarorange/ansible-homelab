---
# Reconya Configuration
# Production-ready defaults for Reconya network reconnaissance deployment

# Service Configuration
reconya_enabled: true
reconya_version: "latest"
reconya_network_name: "reconya"
reconya_network_external: true

# Container Configuration
reconya_container_restart_policy: "unless-stopped"
reconya_container_network_mode: "host"  # Required for full network access

# Port Configuration
reconya_port: 3008

# Domain Configuration
reconya_subdomain: "reconya"

# Authentication Configuration
reconya_auth_enabled: true
reconya_auth_method: "basic"  # Options: basic, authentik, none
reconya_admin_username: "admin"
reconya_admin_password: "{{ vault_reconya_admin_password | default('') }}"

# Database Configuration
reconya_database_type: "sqlite"
reconya_database_path: "/app/data/reconya.db"
reconya_database_name: "reconya"

# Network Configuration
reconya_network_range: "192.168.1.0/24"
reconya_scan_interval: 300  # 5 minutes
reconya_scan_timeout: 60
reconya_max_devices: 1000
reconya_auto_discovery: true
reconya_network_ranges: ["192.168.1.0/24"]

# Service Components
reconya_components:
  backend:
    enabled: true
    image: "ghcr.io/dyneteq/reconya:latest"
    container_name: "reconya-backend"
    port: 3008
    volumes:
      - "{{ docker_dir }}/reconya/data:/app/data"
      - "{{ logs_dir }}/reconya:/app/logs"
      - "/proc/net:/proc/net:ro"
      - "/sys/class/net:/sys/class/net:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      - DATABASE_TYPE={{ reconya_database_type }}
      - SQLITE_PATH={{ reconya_database_path }}
      - DATABASE_NAME={{ reconya_database_name }}
      - NETWORK_RANGE={{ reconya_network_range }}
      - JWT_SECRET_KEY={{ vault_reconya_jwt_secret | default('') }}
      - LOGIN_USERNAME={{ reconya_admin_username }}
      - LOGIN_PASSWORD={{ reconya_admin_password }}
      - SCAN_INTERVAL={{ reconya_scan_interval }}
      - SCAN_TIMEOUT={{ reconya_scan_timeout }}
      - MAX_DEVICES={{ reconya_max_devices }}
      - AUTO_DISCOVERY={{ reconya_auto_discovery | lower }}
      - NETWORK_RANGES={{ reconya_network_ranges | join(',') }}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3008/api/health"]
      interval: "30s"
      timeout: "10s"
      retries: 3
    capabilities:
      - NET_ADMIN
      - NET_RAW
    resources:
      limits:
        cpus: '1'
        memory: 1G
      reservations:
        cpus: '0.25'
        memory: 256M

# Monitoring Integration
reconya_monitoring_enabled: true
reconya_metrics_enabled: true
reconya_health_check_enabled: true
reconya_health_check_interval: 30

# Security Configuration
reconya_security_headers: true
reconya_rate_limiting: true
reconya_rate_limit_requests: 100
reconya_rate_limit_window: 60
reconya_cors_enabled: false
reconya_cors_origins: []
reconya_allow_anonymous_access: false

# Backup Configuration
reconya_backup_enabled: true
reconya_backup_schedule: "0 2 * * *"  # Daily at 2 AM
reconya_backup_retention: 7  # Keep backups for 7 days
reconya_backup_compression: true
reconya_backup_include_database: true
reconya_backup_include_config: true
reconya_backup_dir: "{{ backup_dir }}/reconya"
reconya_backup_retention_days: 7
reconya_backup_log_file: "{{ logs_dir }}/reconya/backup/backup.log"
reconya_backup_max_log_size: "10M"
reconya_backup_notifications_enabled: true

# Logging Configuration
reconya_log_level: "info"  # Options: debug, info, warn, error
reconya_log_format: "json"
reconya_log_retention: 30  # Days
reconya_log_rotation: true
reconya_health_check_log_file: "{{ logs_dir }}/reconya/health/health.log"
reconya_health_check_max_log_size: "10M"
reconya_health_check_retention_days: 7
reconya_health_check_timeout: 30

# Resource Limits
reconya_memory_limit: "2g"
reconya_cpu_limit: "2.0"
reconya_storage_limit: "10g"

# Traefik Configuration
reconya_traefik_enabled: true
reconya_traefik_network: "{{ traefik_network | default('homelab') }}"
reconya_traefik_middleware: "secure-headers,compress"
reconya_traefik_auth_middleware: "authentik@docker"
reconya_traefik_ssl_enabled: true
reconya_traefik_ssl_resolver: "{{ traefik_ssl_resolver | default('cloudflare') }}"

# Homepage Integration
reconya_homepage_enabled: true
reconya_homepage_category: "Network"
reconya_homepage_description: "Network Reconnaissance & Asset Discovery"
reconya_homepage_icon: "reconya.png"
reconya_homepage_widget_enabled: true

# Telegraf Integration
reconya_telegraf_enabled: true
reconya_telegraf_metrics: true
reconya_telegraf_logs: true

# Prometheus Integration
reconya_prometheus_enabled: true
reconya_prometheus_metrics: true
reconya_prometheus_scrape_interval: 30

# Grafana Integration
reconya_grafana_enabled: true
reconya_grafana_dashboard: true
reconya_grafana_datasource: "prometheus"

# Loki Integration
reconya_loki_enabled: true
reconya_loki_logs: true

# Alerting Configuration
reconya_alerting_enabled: true
reconya_alerting_provider: "alertmanager"
reconya_alerting_webhook: "http://alertmanager:9093/api/v1/alerts"

# CrowdSec Integration
reconya_crowdsec_enabled: true
reconya_crowdsec_collections:
  - "crowdsecurity/nginx"
  - "crowdsecurity/http-cve"

# Fail2ban Integration
reconya_fail2ban_enabled: true
reconya_fail2ban_jail: "reconya"
reconya_fail2ban_max_retry: 5
reconya_fail2ban_bantime: 3600

# Service Dependencies
reconya_dependencies:
  - "docker"
  - "traefik"
  - "monitoring_infrastructure"

# Health Check Configuration
reconya_health_check_url: "/api/health"
reconya_health_check_timeout: 10
reconya_health_check_retries: 3

# Service configuration directories
reconya_config_dir: "{{ docker_dir }}/reconya"
reconya_data_dir: "{{ docker_dir }}/reconya/data"
reconya_logs_dir: "{{ logs_dir }}/reconya"

# Service container names
reconya_backend_container_name: "reconya-backend"

# Service ports
reconya_backend_port: 3008

# Network scanning capabilities
reconya_network_capabilities:
  - NET_ADMIN
  - NET_RAW

# Network access requirements
reconya_network_access:
  - "/proc/net:/proc/net:ro"
  - "/sys/class/net:/sys/class/net:ro"
  - "/var/run/docker.sock:/var/run/docker.sock:ro" 