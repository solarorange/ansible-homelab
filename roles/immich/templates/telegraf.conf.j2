# Telegraf configuration for Immich metrics collection
# Generated by Ansible - DO NOT EDIT MANUALLY

[agent]
  interval = "30s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  hostname = "{{ ansible_hostname }}"
  omit_hostname = false

# Output to Prometheus
[[outputs.prometheus_client]]
  listen = ":9273"
  path = "/metrics"
  expiration_interval = "60s"

# Docker container metrics
[[inputs.docker]]
  endpoint = "unix:///var/run/docker.sock"
  gather_services = false
  container_names = ["immich-server", "immich-web", "immich-postgres", "immich-redis", "immich-ml"]
  timeout = "5s"
  perdevice = true
  total = false
  docker_label_include = ["immich.*"]
  tag_env = ["JOB_ID"]

# System metrics
[[inputs.cpu]]
  percpu = true
  totalcpu = true
  collect_cpu_time = false
  report_active = false

[[inputs.disk]]
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "iso9660", "overlay", "aufs", "squashfs"]

[[inputs.diskio]]

[[inputs.kernel]]

[[inputs.mem]]

[[inputs.processes]]

[[inputs.swap]]

[[inputs.system]]

# HTTP response metrics for Immich
[[inputs.http_response]]
  urls = [
    "http://immich-server:3001/api/health",
    "http://immich-web:3000"
  ]
  response_timeout = "5s"
  method = "GET"
  [inputs.http_response.tags]
    service = "immich"

# PostgreSQL metrics
[[inputs.postgresql]]
  address = "host=immich-postgres port=5432 user={{ immich_postgres_user }} password: "{{ vault_immich_admin_password | password_hash("bcrypt") }}"{{ immich_postgres_db }}"]
  [inputs.postgresql.tags]
    service = "immich"

# Redis metrics
[[inputs.redis]]
  servers = ["tcp://immich-redis:6379"]
  password: "{{ vault_immich_admin_password | password_hash("bcrypt") }}"immich"

# Log parsing for Immich
[[inputs.tail]]
  files = [
    "{{ logs_dir }}/immich/server/*.log",
    "{{ logs_dir }}/immich/web/*.log",
    "{{ logs_dir }}/immich/postgres/*.log",
    "{{ logs_dir }}/immich/redis/*.log",
    "{{ logs_dir }}/immich/ml/*.log"
  ]
  from_beginning = false
  name_override = "immich_logs"
  data_format = "grok"
  grok_patterns = [
    "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} %{GREEDYDATA:message}",
    "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} %{WORD:component} %{GREEDYDATA:message}"
  ]
  [inputs.tail.tags]
    service = "immich"

# Custom script for Immich-specific metrics
[[inputs.exec]]
  commands = [
    "{{ config_dir }}/immich/collect-metrics.sh"
  ]
  timeout = "30s"
  data_format = "json"
  name_override = "immich_custom"
  [inputs.exec.tags]
    service = "immich" 