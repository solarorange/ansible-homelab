#!/bin/bash
# Immich Backup Script
# Generated by Ansible - DO NOT EDIT MANUALLY

set -euo pipefail

# Configuration
IMMICH_DIR="{{ immich_config_dir }}"
BACKUP_DIR="{{ backup_dir }}/immich"
LOG_FILE="{{ logs_dir }}/immich/backup/backup.log"
RETENTION_DAYS="{{ immich_backup_retention_days | default(7) }}"
COMPRESSION="{{ 'true' if immich_backup_compression else 'false' }}"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

# Logging function
log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" | tee -a "$LOG_FILE"
}

# Error handling
error_exit() {
    log "ERROR: $1"
    exit 1
}

# Create backup directory if it doesn't exist
mkdir -p "$BACKUP_DIR"

# Generate backup filename
BACKUP_FILE="$BACKUP_DIR/immich-backup-$(date +%Y%m%d-%H%M%S).tar.gz"

log "Starting Immich backup..."

# Stop Immich services
log "Stopping Immich services..."
cd "$IMMICH_DIR"
docker-compose stop || error_exit "Failed to stop Immich services"

# Wait for services to stop
sleep 10

# Create backup
log "Creating backup: $BACKUP_FILE"
if [ "$COMPRESSION" = "true" ]; then
    tar -czf "$BACKUP_FILE" \
        -C "$(dirname $IMMICH_DIR)" \
        "$(basename $IMMICH_DIR)" \
        --exclude="*/logs/*" \
        --exclude="*/cache/*" \
        --exclude="*/temp/*" \
        --exclude="*/tmp/*" \
        || error_exit "Failed to create backup"
else
    tar -cf "${BACKUP_FILE%.gz}" \
        -C "$(dirname $IMMICH_DIR)" \
        "$(basename $IMMICH_DIR)" \
        --exclude="*/logs/*" \
        --exclude="*/cache/*" \
        --exclude="*/temp/*" \
        --exclude="*/tmp/*" \
        || error_exit "Failed to create backup"
fi

# Start Immich services
log "Starting Immich services..."
docker-compose start || error_exit "Failed to start Immich services"

# Verify backup
log "Verifying backup..."
if [ -f "$BACKUP_FILE" ]; then
    BACKUP_SIZE=$(du -h "$BACKUP_FILE" | cut -f1)
    log "Backup created successfully: $BACKUP_FILE ($BACKUP_SIZE)"
else
    error_exit "Backup file not found"
fi

# Cleanup old backups
log "Cleaning up old backups (older than $RETENTION_DAYS days)..."
find "$BACKUP_DIR" -name "immich-backup-*.tar.gz" -mtime +$RETENTION_DAYS -delete

# Count remaining backups
BACKUP_COUNT=$(find "$BACKUP_DIR" -name "immich-backup-*.tar.gz" | wc -l)
log "Backup cleanup completed. $BACKUP_COUNT backups remaining."

log "Immich backup completed successfully!" 