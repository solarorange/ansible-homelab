#!/bin/bash
# ErsatzTV Start Script
# Generated by Ansible - Do not edit manually

set -e

# Configuration
CONFIG_DIR="{{ ersatztv_config_dir }}"
CONTAINER_NAME="{{ ersatztv_container_name }}"
COMPOSE_FILE="$CONFIG_DIR/docker-compose.yml"
LOG_FILE="$CONFIG_DIR/start.log"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Logging function
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}" | tee -a "$LOG_FILE"
}

error() {
    echo -e "${RED}[$(date +'%Y-%m-%d %H:%M:%S')] ERROR: $1${NC}" | tee -a "$LOG_FILE"
}

warning() {
    echo -e "${YELLOW}[$(date +'%Y-%m-%d %H:%M:%S')] WARNING: $1${NC}" | tee -a "$LOG_FILE"
}

# Check if running as root
if [[ $EUID -eq 0 ]]; then
   error "This script should not be run as root"
   exit 1
fi

# Check if Docker is running
if ! docker info > /dev/null 2>&1; then
    error "Docker is not running"
    exit 1
fi

# Check if docker-compose file exists
if [[ ! -f "$COMPOSE_FILE" ]]; then
    error "Docker Compose file not found: $COMPOSE_FILE"
    exit 1
fi

# Check if container is already running
if docker ps --format "table {{.Names}}" | grep -q "^$CONTAINER_NAME$"; then
    warning "Container $CONTAINER_NAME is already running"
    exit 0
fi

# Stop any existing container
if docker ps -a --format "table {{.Names}}" | grep -q "^$CONTAINER_NAME$"; then
    log "Stopping existing container $CONTAINER_NAME"
    docker stop "$CONTAINER_NAME" || true
    docker rm "$CONTAINER_NAME" || true
fi

# Start the service
log "Starting ErsatzTV service"
cd "$CONFIG_DIR"

# Pull latest image
log "Pulling latest ErsatzTV image"
docker-compose -f "$COMPOSE_FILE" pull

# Start the service
log "Starting container"
docker-compose -f "$COMPOSE_FILE" up -d

# Wait for service to be ready
log "Waiting for service to be ready..."
for i in {1..30}; do
    if curl -f -s "http://{{ ansible_default_ipv4.address }}:{{ ersatztv_port }}/api/health" > /dev/null 2>&1; then
        log "Service is ready!"
        break
    fi
    if [[ $i -eq 30 ]]; then
        error "Service failed to start within 30 seconds"
        docker-compose -f "$COMPOSE_FILE" logs
        exit 1
    fi
    sleep 1
done

# Check service status
if docker ps --format "table {{.Names}}" | grep -q "^$CONTAINER_NAME$"; then
    log "ErsatzTV service started successfully"
    log "Service URL: https://{{ ersatztv_domain }}"
    log "Local URL: http://{{ ansible_default_ipv4.address }}:{{ ersatztv_port }}"
else
    error "Failed to start ErsatzTV service"
    docker-compose -f "$COMPOSE_FILE" logs
    exit 1
fi

log "Start script completed successfully" 