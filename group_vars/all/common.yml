---
# Base Configuration
domain: "{{ lookup('env', 'HOMELAB_DOMAIN') | default('yourdomain.com') }}"  # Main domain name
timezone: "{{ lookup('env', 'HOMELAB_TIMEZONE') | default('America/New_York') }}"  # Server timezone

# Network Configuration
ansible_server_ip: "{{ lookup('env', 'ANSIBLE_SERVER_IP') | default('{{ ansible_default_ipv4.address }}') }}"
server_ips:
  - "{{ lookup('env', 'HOMELAB_IP_1') | default('{{ ansible_default_ipv4.address }}') }}"
  - "{{ lookup('env', 'HOMELAB_IP_2') | default('{{ ansible_default_ipv4.address }}') }}"
  - "{{ lookup('env', 'HOMELAB_IP_3') | default('{{ ansible_default_ipv4.address }}') }}"
  - "{{ lookup('env', 'HOMELAB_IP_4') | default('{{ ansible_default_ipv4.address }}') }}"

# DNS Configuration
pihole_domain: "pihole.{{ domain }}"
pihole_upstream_dns:
  - "{{ lookup('env', 'UPSTREAM_DNS_1') | default('8.8.8.8') }}"
  - "{{ lookup('env', 'UPSTREAM_DNS_2') | default('8.8.4.4') }}"

# Docker Configuration
# Recommended paths:
# /opt/docker - Main Docker root (requires 100GB+ space)
# /var/lib/docker - Docker daemon data (system managed)
# /mnt/docker - Alternative for large storage arrays
docker_user: "{{ lookup('env', 'DOCKER_ROOT') | default('/opt/docker') }}"
docker_data_user: "{{ vault_service_user }}"
docker_config_user: "{{ vault_service_user }}"
docker_logs_user: "{{ vault_service_user }}"

# Docker networks with proper segmentation
docker_networks:
  - name: frontend
    driver: bridge
    internal: false
    ipam_config:
      - subnet: "{{ ansible_default_ipv4.address }}/24"
        gateway: "{{ ansible_default_ipv4.address }}"
  - name: backend
    driver: bridge
    internal: true
    ipam_config:
      - subnet: "{{ ansible_default_ipv4.address }}/24"
        gateway: "{{ ansible_default_ipv4.address }}"
  - name: database
    driver: bridge
    internal: true
    ipam_config:
      - subnet: "{{ ansible_default_ipv4.address }}/24"
        gateway: "{{ ansible_default_ipv4.address }}"
  - name: monitoring
    driver: bridge
    internal: true
    ipam_config:
      - subnet: "{{ ansible_default_ipv4.address }}/24"
        gateway: "{{ ansible_default_ipv4.address }}"
  - name: security
    driver: bridge
    internal: true
    ipam_config:
      - subnet: "{{ ansible_default_ipv4.address }}/24"
        gateway: "{{ ansible_default_ipv4.address }}"
  - name: media
    driver: bridge
    internal: true
    ipam_config:
      - subnet: "{{ ansible_default_ipv4.address }}/24"
        gateway: "{{ ansible_default_ipv4.address }}"

# Service network assignments for security
service_network_assignments:
  # Frontend services (public access)
  frontend:
    - traefik
    - homepage
    - portainer
  
  # Backend services (internal only)
  backend:
    - authentik
    - grafana
    - prometheus
    - alertmanager
  
  # Database services (isolated)
  database:
    - postgresql
    - redis
    - mariadb
    - influxdb
  
  # Monitoring services (isolated)
  monitoring:
    - loki
    - promtail
    - blackbox_exporter
  
  # Security services (isolated)
  security:
    - vault
    - crowdsec
    - fail2ban
  
  # Media services (isolated)
  media:
    - sonarr
    - radarr
    - lidarr
    - jellyfin
    - plex

# Cloudflare Configuration
cloudflare_enabled: "{{ lookup('env', 'CLOUDFLARE_ENABLED') | default('false') | bool }}"
cloudflare_email: "{{ lookup('env', 'CLOUDFLARE_EMAIL') | default('') }}"
cloudflare_api_token: "{{ lookup('env', 'CLOUDFLARE_API_TOKEN') | default('') }}"

# Reconya Configuration
reconya_enabled: "{{ lookup('env', 'RECONYA_ENABLED') | default('false') | bool }}"
reconya_network_range: "{{ lookup('env', 'RECONYA_NETWORK_RANGE') | default('{{ ansible_default_ipv4.address }}/24') }}"
reconya_scan_interval: "{{ lookup('env', 'RECONYA_SCAN_INTERVAL') | default(300) | int }}"
reconya_max_devices: "{{ lookup('env', 'RECONYA_MAX_DEVICES') | default(1000) | int }}"
reconya_subdomain: "{{ lookup('env', 'RECONYA_SUBDOMAIN') | default('reconya') }}" 