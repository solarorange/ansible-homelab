---
#==============================================================================
# ADVANCED CONFIGURATION AND OPTIMIZATION
#==============================================================================

#==============================================================================
# PERFORMANCE OPTIMIZATION
#==============================================================================

# Parallel execution settings
ansible_forks: 10
ansible_ssh_pipelining: true
ansible_gather_timeout: 30
ansible_command_timeout: 60

# Resource optimization
resource_limits:
  max_concurrent_containers: 20
  max_concurrent_backups: 3
  max_concurrent_downloads: 5
  cpu_threshold: 80
  memory_threshold: 85
  disk_io_threshold: 70
  network_bandwidth_limit: "100M"

# Docker optimization
docker_optimization:
  storage_driver: overlay2
  log_driver: json-file
  log_max_size: "10m"
  log_max_files: 3
  default_ulimits:
    nofile:
      soft: 65536
      hard: 65536
  live_restore: true
  userland_proxy: false
  experimental: false

#==============================================================================
# CONDITIONAL EXECUTION
#==============================================================================

# Host capability detection
host_capabilities:
  # Auto-detect based on system resources
  auto_detect_resources: true
  
  # Minimum requirements for each role
  minimum_requirements:
    security:
      memory: "512M"
      cpu_cores: 1
      disk_space: "1G"
    databases:
      memory: "1G"
      cpu_cores: 2
      disk_space: "5G"
    storage:
      memory: "1G"
      cpu_cores: 2
      disk_space: "10G"
    media:
      memory: "2G"
      cpu_cores: 4
      disk_space: "20G"
    logging:
      memory: "1G"
      cpu_cores: 2
      disk_space: "5G"

# Smart conditional execution
conditional_execution:
  # Skip resource-intensive tasks during peak hours
  peak_hours_skip:
    enabled: true
    start_hour: 18
    end_hour: 22
    skip_tasks:
      - backup
      - media_processing
      - large_downloads
  
  # Weather-based execution (if weather API available)
  weather_based:
    enabled: false
    api_key: "{{ lookup('env', 'WEATHER_API_KEY') | default('') }}"
    skip_on_storm: true
  
  # Network-based execution
  network_based:
    enabled: true
    min_bandwidth: "10M"
    skip_on_slow_connection: true

#==============================================================================
# ENVIRONMENT-SPECIFIC OVERRIDES
#==============================================================================

# Environment detection
environment: "{{ lookup('env', 'ANSIBLE_ENVIRONMENT') | default('production') }}"

# Environment-specific configurations
environments:
  development:
    resource_limits:
      max_concurrent_containers: 5
      max_concurrent_backups: 1
    docker_optimization:
      experimental: true
    monitoring:
      retention_days: 7
    backup:
      retention_days: 7
      compression: false
  
  staging:
    resource_limits:
      max_concurrent_containers: 10
      max_concurrent_backups: 2
    monitoring:
      retention_days: 30
    backup:
      retention_days: 30
      compression: true
  
  production:
    resource_limits:
      max_concurrent_containers: 20
      max_concurrent_backups: 3
    monitoring:
      retention_days: 90
    backup:
      retention_days: 365
      compression: true
      encryption: true

#==============================================================================
# ADVANCED VALIDATION
#==============================================================================

# Pre-flight checks
preflight_checks:
  system_requirements:
    - check_disk_space
    - check_memory
    - check_cpu_cores
    - check_network_connectivity
    - check_docker_installation
    - check_ansible_version
  
  security_checks:
    - check_firewall_status
    - check_ssl_certificates
    - check_user_permissions
    - check_system_updates
  
  service_checks:
    - check_database_connectivity
    - check_storage_accessibility
    - check_monitoring_endpoints
    - check_backup_destinations

# Validation thresholds
validation_thresholds:
  disk_usage_warning: 80
  disk_usage_critical: 90
  memory_usage_warning: 85
  memory_usage_critical: 95
  cpu_usage_warning: 80
  cpu_usage_critical: 90
  network_latency_warning: 100
  network_latency_critical: 500

#==============================================================================
# ROLLBACK PROCEDURES
#==============================================================================

# Rollback configuration
rollback:
  enabled: true
  max_rollback_points: 10
  auto_rollback_on_failure: true
  rollback_timeout: 300
  
  # Rollback triggers
  triggers:
    - service_failure_count: 3
    - health_check_failure: true
    - backup_failure: true
    - security_violation: true
  
  # Rollback procedures
  procedures:
    database:
      - stop_services
      - restore_database_backup
      - verify_integrity
      - restart_services
    
    configuration:
      - backup_current_config
      - restore_previous_config
      - validate_configuration
      - restart_affected_services
    
    full_system:
      - create_system_snapshot
      - stop_all_services
      - restore_system_backup
      - verify_system_health
      - restart_services_in_order

#==============================================================================
# HEALTH MONITORING
#==============================================================================

# Health check configuration
health_monitoring:
  enabled: true
  check_interval: 60
  timeout: 30
  retries: 3
  
  # Service health checks
  services:
    - name: "database"
      url: "http://localhost:5432/health"
      expected_status: 200
      timeout: 10
    
    - name: "storage"
      command: "df -h"
      expected_exit_code: 0
      timeout: 5
    
    - name: "network"
      command: "ping -c 1 8.8.8.8"
      expected_exit_code: 0
      timeout: 10
  
  # Self-healing actions
  self_healing:
    enabled: true
    max_attempts: 3
    
    actions:
      service_restart:
        - restart_failed_service
        - wait_for_health_check
        - notify_admin
    
      resource_cleanup:
        - cleanup_docker_containers
        - cleanup_log_files
        - restart_if_needed
    
      network_recovery:
        - restart_network_services
        - check_connectivity
        - update_dns_if_needed

#==============================================================================
# SECURITY HARDENING
#==============================================================================

# Advanced security features
security_hardening:
  # System hardening
  system:
    - disable_unused_services
    - configure_firewall_rules
    - update_system_packages
    - configure_audit_logging
    - harden_ssh_configuration
  
  # Docker security
  docker:
    - enable_content_trust
    - configure_seccomp_profiles
    - limit_container_capabilities
    - enable_selinux
    - configure_network_policies
  
  # Application security
  applications:
    - enable_ssl_tls
    - configure_authentication
    - implement_rate_limiting
    - enable_audit_logging
    - configure_backup_encryption

# Compliance frameworks
compliance:
  enabled: true
  frameworks:
    - cis_docker_benchmark
    - nist_cybersecurity_framework
    - iso_27001
    - gdpr_compliance

#==============================================================================
# BACKUP ORCHESTRATION
#==============================================================================

# Advanced backup strategies
backup_strategies:
  # Incremental backup with full weekly
  incremental:
    enabled: true
    full_backup_day: "sunday"
    retention_days: 30
    compression: true
    encryption: true
  
  # Differential backup
  differential:
    enabled: false
    base_backup_day: "sunday"
    retention_days: 14
  
  # Snapshot-based backup
  snapshots:
    enabled: true
    snapshot_interval: "1h"
    retention_count: 24
    auto_cleanup: true

# Backup testing
backup_testing:
  enabled: true
  test_schedule: "weekly"
  test_procedures:
    - verify_backup_integrity
    - test_restore_procedure
    - validate_data_consistency
    - measure_restore_time

#==============================================================================
# DOCUMENTATION
#==============================================================================

# Auto-generated documentation
documentation:
  enabled: true
  output_formats:
    - markdown
    - html
    - pdf
  
  # Documentation sections
  sections:
    - architecture_overview
    - deployment_guide
    - configuration_reference
    - troubleshooting_guide
    - api_documentation
    - security_guide
  
  # Auto-generation triggers
  triggers:
    - on_deployment
    - on_configuration_change
    - on_schedule
    - on_demand

# Diagram generation
diagrams:
  enabled: true
  types:
    - architecture_diagram
    - network_topology
    - data_flow
    - deployment_pipeline
  
  tools:
    - plantuml
    - drawio
    - mermaid 