---
username: '{{ lookup(''env'', ''HOMELAB_USERNAME'') | default(''homelab'') }}'
puid: '{{ lookup(''env'', ''HOMELAB_PUID'') | default(''1000'') }}'
pgid: '{{ lookup(''env'', ''HOMELAB_PGID'') | default(''1000'') }}'
ip_address: '{{ lookup(''env'', ''HOMELAB_IP_ADDRESS'') | default(''{{ ansible_default_ipv4.address
  }}'') }}'
server_ip: '{{ lookup(''env'', ''HOMELAB_SERVER_IP'') | default(''{{ ansible_default_ipv4.address }}'') }}'
python_interpreter: '{{ lookup(''env'', ''HOMELAB_PYTHON_INTERPRETER'') | default(''/usr/bin/python3'') }}'
timezone: '{{ lookup(''env'', ''HOMELAB_TIMEZONE'') | default(''America/New_York'')
  }}'
plex_server_ip: '{{ lookup(''env'', ''PLEX_SERVER_IP'') | default(''{{ ansible_default_ipv4.address
  }}'') }}'
docker_dir: /home/{{ username }}/docker
data_dir: /home/{{ username }}/data
config_dir: '{{ docker_dir }}/config'
backup_dir: /home/{{ username }}/backups
logs_dir: /home/{{ username }}/logs
domain: '{{ lookup(''env'', ''HOMELAB_DOMAIN'') | default(''yourdomain.com'') }}'
cloudflare_enabled: '{{ lookup(''env'', ''CLOUDFLARE_ENABLED'') | default(''false'')
  | bool }}'
cloudflare_email: '{{ lookup(''env'', ''CLOUDFLARE_EMAIL'') | default('''') }}'
cloudflare_api_key: '{{ lookup(''env'', ''CLOUDFLARE_API_KEY'') | default('''') }}'
subdomains:
  traefik: traefik
  authentik: auth
  portainer: portainer
  grafana: grafana
  prometheus: prometheus
  loki: loki
  promtail: logs
  alertmanager: alerts
  sonarr: sonarr
  radarr: radarr
  prowlarr: prowlarr
  bazarr: bazarr
  overseerr: overseerr
  jellyfin: jellyfin
  tautulli: tautulli
  pinchflat: pinchflat
  gitlab: git
  harbor: registry
  code: code
  nextcloud: cloud
  minio: s3
  paperless: docs
  immich: photos
  homeassistant: hass
  nodered: flows
  n8n: n8n
  vault: vault
  vaultwarden: passwords
  dashdot: dashdot
  heimdall: heimdall
  homarr: homarr
  mqtt: mqtt
  wireguard: vpn
  pihole: dns
  nginx_proxy_manager: proxy
  dash: dash
  files: files
  watchtower: updates
  dumbassets: assets
  romm: romm
  gluetun: gluetun
traefik_basic_auth_hash: '{{ vault_traefik_basic_auth_hash }}'
authentik_secret_key: '{{ vault_authentik_secret_key }}'
authentik_postgres_password: '{{ vault_service_password }}'
authentik_admin_email: '{{ vault_authentik_admin_email }}'
authentik_admin_password: '{{ vault_service_password }}'
wireguard_password: '{{ vault_service_password }}'
codeserver_password: '{{ vault_service_password }}'
gitlab_root_password: '{{ vault_service_password }}'
vault_root_token: '{{ vault_root_token | default('''') }}'
vault_unseal_key: '{{ vault_unseal_key | default('''') }}'
monitoring_enabled: true
influxdb_enabled: true
telegraf_enabled: true
prometheus_enabled: true
grafana_enabled: true
loki_enabled: true
alertmanager_enabled: true
influxdb_admin_user: '{{ vault_service_user }}'
influxdb_admin_password: '{{ vault_service_password }}'
influxdb_org: homelab
influxdb_bucket: metrics
influxdb_token: '{{ vault_influxdb_token }}'
influxdb_username: '{{ vault_influxdb_username }}'
influxdb_password: '{{ vault_service_password }}'
influxdb_retention: '{{ lookup(''env'', ''INFLUXDB_RETENTION'') | default(''30d'')
  }}'
grafana_admin_user: '{{ vault_service_user }}'
grafana_admin_password: '{{ vault_service_password }}'
grafana_secret_key: '{{ vault_grafana_secret_key }}'
telegram_bot_token: '{{ vault_telegram_bot_token }}'
telegram_chat_id: '{{ vault_telegram_chat_id }}'
enabled_services:
  # Core Infrastructure
  - traefik
  - authentik
  - monitoring_infrastructure
  - automation
  - databases
  - storage
  - logging
  - security
  - utilities
  - media
  - certificate_management

  # Monitoring Stack
  - influxdb
  - telegraf
  - prometheus
  - grafana
  - loki
  - promtail
  - alertmanager
  - blackbox_exporter

  # Security Services
  - crowdsec
  - fail2ban
  - vault
  - wireguard

  # Network Services
  - pihole
  - nginx_proxy_manager
  - fing

  # Media Services
  - sabnzbd
  - qbittorrent
  - sonarr
  - radarr
  - lidarr
  - readarr
  - prowlarr
  - bazarr
  - jellyfin
  - emby
  - plex
  - tdarr
  - overseerr
  - tautulli
  - immich
  - calibre
  - audiobookshelf
  - komga
  - ersatztv
  - deluge
  - transmission
  - rtorrent
  - unmanic

  # Database Services
  - postgresql
  - mariadb
  - redis
  - elasticsearch

  # Storage Services
  - nextcloud
  - samba
  - syncthing

  # Development Services
  - gitlab
  - harbor
  - minio
  - paperless
  - bookstack
  - filebrowser
  - linkwarden
  - vaultwarden
  - code_server
  - dumbassets

  # Automation Services
  - portainer
  - watchtower
  - homeassistant
  - nodered
  - n8n
  - mosquitto

  # Dashboard Services
  - homepage
  - dashdot
  - heimdall
  - homarr

  # Utility Services
  - paperless_ngx
  - uptime_kuma
  - guacamole
  - requestrr
  - romm

  # Additional Services
  - backup
  - kopia
  - healthcheck
  - gluetun
  - pinchflat
media_enabled: true
automation_enabled: true
backup_enabled: true
development_enabled: true

# Automation Services
home_assistant_enabled: true
zigbee2mqtt_enabled: true
node_red_enabled: true
n8n_enabled: true

# Database Services
databases_postgresql_enabled: true
databases_mariadb_enabled: true
security_enhanced: '{{ lookup(''env'', ''SECURITY_ENHANCED'') | default(''true'')
  | bool }}'
verify_deployment: true
reboot_after_deployment: true
ssl_enabled: '{{ lookup(''env'', ''SSL_ENABLED'') | default(''true'') | bool }}'
monitoring_external: true
docker_networks:
  - name: homelab
    driver: bridge
    ipam_config:
      - subnet: '{{ ansible_default_ipv4.network }}/24'
        gateway: '{{ ansible_default_ipv4.gateway }}'
  - name: monitoring
    driver: bridge
    internal: true
    ipam_config:
      - subnet: '10.10.1.0/24'
        gateway: '10.10.1.1'
  - name: media
    driver: bridge
    ipam_config:
      - subnet: '10.10.2.0/24'
        gateway: '10.10.2.1'
traefik_pilot_token: ''
traefik_log_level: INFO
traefik_access_logs: true
media_directories:
  - '{{ data_dir }}/media'
  - '{{ data_dir }}/media/movies'
  - '{{ data_dir }}/media/tv'
  - '{{ data_dir }}/media/anime'
  - '{{ data_dir }}/media/music'
  - '{{ data_dir }}/media/books'
  - '{{ data_dir }}/media/audiobooks'
  - '{{ data_dir }}/media/podcasts'
  - '{{ data_dir }}/torrents'
  - '{{ data_dir }}/torrents/movies'
  - '{{ data_dir }}/torrents/tv'
  - '{{ data_dir }}/torrents/anime'
  - '{{ data_dir }}/usenet'
  - '{{ data_dir }}/usenet/incomplete'
  - '{{ data_dir }}/usenet/complete'
postgres_password: '{{ vault_service_password }}'
redis_password: '{{ vault_service_password }}'
mysql_root_password: '{{ vault_service_password }}'
essential_packages:
  - curl
  - wget
  - git
  - unzip
  - htop
  - iotop
  - nload
  - ncdu
  - tree
  - vim
  - nano
  - jq
  - yq
  - rsync
  - cron
  - logrotate
  - fail2ban
  - ufw
  - net-tools
  - dnsutils
pip_packages:
  - docker
  - docker-compose
  - requests
  - pyyaml
  - jinja2
  - passlib
  - bcrypt
  - github3.py
  - influxdb-client
  - prometheus-client
docker_packages:
  - docker-ce
  - docker-ce-cli
  - containerd.io
  - docker-buildx-plugin
  - docker-compose-plugin
resource_limits:
  small:
    memory: 256m
    cpus: '0.5'
  medium:
    memory: 512m
    cpus: '1.0'
  large:
    memory: 1g
    cpus: '2.0'
  xlarge:
    memory: 2g
    cpus: '4.0'
backup_retention_days: '{{ lookup(''env'', ''BACKUP_RETENTION_DAYS'') | default(''7'')
  | int }}'
backup_schedule: '{{ lookup(''env'', ''BACKUP_SCHEDULE'') | default(''0 2 * * *'')
  }}'
backup_encryption_key: '{{ vault_backup_encryption_key }}'
backup_include:
  - docker_volumes
  - config_files
  - application_data
  - databases
backup_priority_levels:
  critical:
    description: Essential services that must backup first
    time_slot: 1:00 AM
    services:
      - authentik
      - traefik
      - vault
      - databases
      - system_configs
  high:
    description: Important services with moderate data
    time_slot: 2:00 AM
    services:
      - homeassistant
      - zigbee2mqtt
      - mosquitto
      - monitoring_infrastructure
  media_core:
    description: Core media management services
    time_slot: 3:00 AM
    services:
      - sonarr
      - radarr
      - lidarr
      - readarr
      - prowlarr
      - bazarr
  media_download:
    description: Download and processing services
    time_slot: 4:00 AM
    services:
      - qbittorrent
      - sabnzbd
      - tdarr
      - komga
      - audiobookshelf
      - pinchflat
  media_playback:
    description: Media playback and streaming services
    time_slot: 5:00 AM
    services:
      - jellyfin
      - emby
      - tautulli
      - overseerr
  file_services:
    description: File storage and sharing services
    time_slot: 6:00 AM
    services:
      - nextcloud
      - samba
      - syncthing
      - paperless_ngx
      - immich
  utilities:
    description: Utility and monitoring services
    time_slot: 7:00 AM
    services:
      - portainer
      - grafana
      - prometheus
      - loki
      - alertmanager
      - pihole
backup_schedules:
  homeassistant: 0 2 * * *
  mosquitto: 15 2 * * *
  zigbee2mqtt: 30 2 * * *
  nextcloud: 0 3 * * *
  samba: 15 3 * * *
  syncthing: 30 3 * * *
weekend_backup_schedules:
  saturday_start: 2:00 AM
  saturday_end: 10:00 AM
  sunday_start: 2:00 AM
  sunday_end: 8:00 AM
backup_dependencies:
  sonarr:
    depends_on:
    - postgresql
    - qbittorrent
  radarr:
    depends_on:
    - postgresql
    - qbittorrent
  lidarr:
    depends_on:
    - postgresql
    - qbittorrent
  readarr:
    depends_on:
    - postgresql
    - qbittorrent
  jellyfin:
    depends_on:
    - postgresql
    - sonarr
    - radarr
  emby:
    depends_on:
    - postgresql
    - sonarr
    - radarr
  nextcloud:
    depends_on:
    - postgresql
    - redis
  paperless_ngx:
    depends_on:
    - postgresql
    - redis
backup_resource_limits:
  max_concurrent_backups: 3
  max_backup_duration_minutes: 120
  max_backup_size_gb: 50
  backup_timeout_minutes: 30
backup_monitoring:
  enabled: true
  check_interval_minutes: 30
  alert_on_failure: true
  alert_on_timeout: true
  alert_on_size_exceeded: true
verification_urls:
- traefik
- grafana
- portainer
- authentik
- homeassistant
homeassistant_admin_user: '{{ vault_service_user }}'
homeassistant_admin_password: '{{ vault_service_password }}'
homeassistant_trusted_proxies:
- '{{ ansible_default_ipv4.address }}'
- '{{ ansible_default_ipv4.address }}/24'
mosquitto_admin_user: '{{ vault_service_user }}'
mosquitto_admin_password: '{{ vault_service_password }}'
mosquitto_allow_anonymous: false
mosquitto_max_connections: 100
mosquitto_max_queued_messages: 1000
mosquitto_max_packet_size: 0
zigbee2mqtt_mqtt_user: '{{ vault_service_user }}'
zigbee2mqtt_mqtt_password: '{{ vault_service_password }}'
zigbee2mqtt_serial_port: /dev/ttyACM0
zigbee2mqtt_pan_id: 6754
zigbee2mqtt_channel: 11
nextcloud_admin_user: '{{ vault_service_user }}'
nextcloud_admin_password: '{{ vault_service_password }}'
nextcloud_db_password: '{{ vault_service_password }}'
nextcloud_db_root_password: '{{ vault_service_password }}'
nextcloud_trusted_domains:
- '{{ domain }}'
- nextcloud.{{ domain }}
- '{{ ip_address }}'
samba_workgroup: WORKGROUP
samba_server_string: Samba Server
samba_security: user
samba_map_to_guest: bad user
samba_shares:
- name: media
  path: /data/media
  browseable: 'yes'
  read_only: 'no'
  guest_ok: 'yes'
- name: documents
  path: /data/documents
  browseable: 'yes'
  read_only: 'no'
  guest_ok: 'yes'
- name: backups
  path: /data/backups
  browseable: 'yes'
  read_only: 'no'
  guest_ok: 'yes'
syncthing_gui_user: '{{ vault_service_user }}'
syncthing_gui_password: '{{ vault_service_password }}'
syncthing_gui_apikey: '{{ vault_syncthing_apikey }}'
syncthing_folders:
- id: documents
  path: /data/documents
  label: Documents
  type: sendreceive
- id: photos
  path: /data/photos
  label: Photos
  type: sendreceive
- id: backups
  path: /data/backups
  label: Backups
  type: sendreceive
backup_compression: '{{ lookup(''env'', ''BACKUP_COMPRESSION'') | default(''true'')
  | bool }}'
backup_encryption: '{{ lookup(''env'', ''BACKUP_ENCRYPTION'') | default(''false'')
  | bool }}'
homepage_title: Homelab Dashboard
homepage_description: Enhanced Homelab Infrastructure Dashboard
homepage_theme: dark
homepage_layout: default
homepage_language: en
homepage_units: metric
homepage_timezone: America/New_York
homepage_background: https://images.unsplash.com/photo-1451187580459-43490279c0fa?q=80&w=2072&auto=format&fit=crop
homepage_favicon: https://raw.githubusercontent.com/gethomepage/homepage/main/public/favicon.ico
homepage_icons: https://raw.githubusercontent.com/gethomepage/homepage/main/public/icons
homepage_port: 3000
homepage_puid: 1000
homepage_pgid: 1000
homepage_network: homelab
homepage_widgets:
- resources
- search
- weather
- calendar
- system
- kubernetes
- docker
- pihole
- traefik
- authentik
- portainer
- grafana
- prometheus
- influxdb
- loki
- homeassistant
- zigbee2mqtt
- nodered
- n8n
- jellyfin
- sonarr
- radarr
- lidarr
- readarr
- prowlarr
- bazarr
- tautulli
- overseerr
- nextcloud
- vaultwarden
- gitlab
- harbor
- minio
- paperless
- bookstack
- immich
- filebrowser
- kopia
- duplicati
- uptime_kuma
- dashdot
- code_server
- guacamole
- heimdall
- homarr
- requestrr
- unmanic
monitoring_data_dir: /opt/monitoring
monitoring_email: '{{ lookup(''env'', ''MONITORING_EMAIL'') | default(''monitoring@''
  + domain) }}'
admin_email: '{{ lookup(''env'', ''ADMIN_EMAIL'') | default(''admin@'' + domain) }}'
smtp_host: '{{ lookup(''env'', ''SMTP_HOST'') | default(''smtp.gmail.com'') }}'
smtp_port: '{{ lookup(''env'', ''SMTP_PORT'') | default(587) }}'
smtp_username: '{{ lookup(''env'', ''SMTP_USERNAME'') | default(''your-email@gmail.com'')
  }}'
smtp_password: '{{ vault_service_password }}'
slack_webhook_url: '{{ lookup(''env'', ''SLACK_WEBHOOK_URL'') | default('''') }}'
slack_channel: '{{ lookup(''env'', ''SLACK_CHANNEL'') | default(''#alerts'') }}'
prometheus_version: 2.45.0
prometheus_retention: '{{ lookup(''env'', ''PROMETHEUS_RETENTION'') | default(''15d'')
  }}'
prometheus_storage_path: '{{ monitoring_data_dir }}/prometheus'
grafana_version: 10.0.3
grafana_domain: '{{ lookup(''env'', ''GRAFANA_DOMAIN'') | default(''grafana.'' + domain)
  }}'
alertmanager_version: 0.26.0
alertmanager_config_path: '{{ monitoring_data_dir }}/alertmanager'
loki_version: 2.8.2
loki_retention: '{{ lookup(''env'', ''LOKI_RETENTION'') | default(''168h'') }}'
telegraf_version: 1.28.1
telegraf_config_path: '{{ monitoring_data_dir }}/telegraf'
blackbox_enabled: true
blackbox_version: 0.23.0
blackbox_config_path: '{{ monitoring_data_dir }}/blackbox'
backup_path: '{{ lookup(''env'', ''BACKUP_PATH'') | default(''/mnt/backup'') }}'
backup_retention: '{{ lookup(''env'', ''BACKUP_RETENTION'') | default(''30d'') }}'
system_backup_size: '{{ lookup(''env'', ''SYSTEM_BACKUP_SIZE'') | default(''10G'')
  }}'
docker_backup_size: '{{ lookup(''env'', ''DOCKER_BACKUP_SIZE'') | default(''20G'')
  }}'
config_backup_size: '{{ lookup(''env'', ''CONFIG_BACKUP_SIZE'') | default(''5G'')
  }}'
media_backup_size: '{{ lookup(''env'', ''MEDIA_BACKUP_SIZE'') | default(''100G'')
  }}'
healthcheck_enabled: true
healthcheck_interval: '{{ lookup(''env'', ''HEALTHCHECK_INTERVAL'') | default(''30s'')
  }}'
healthcheck_timeout: '{{ lookup(''env'', ''HEALTHCHECK_TIMEOUT'') | default(''5s'')
  }}'
cpu_warning_threshold: '{{ lookup(''env'', ''CPU_WARNING_THRESHOLD'') | default(80)
  }}'
cpu_critical_threshold: '{{ lookup(''env'', ''CPU_CRITICAL_THRESHOLD'') | default(90)
  }}'
memory_warning_threshold: '{{ lookup(''env'', ''MEMORY_WARNING_THRESHOLD'') | default(80)
  }}'
memory_critical_threshold: '{{ lookup(''env'', ''MEMORY_CRITICAL_THRESHOLD'') | default(90)
  }}'
disk_warning_threshold: '{{ lookup(''env'', ''DISK_WARNING_THRESHOLD'') | default(80)
  }}'
disk_critical_threshold: '{{ lookup(''env'', ''DISK_CRITICAL_THRESHOLD'') | default(90)
  }}'
docker_data_user: '{{ lookup(''env'', ''DOCKER_DATA_ROOT'') | default(''/var/lib/docker'')
  }}'
docker_storage_driver: '{{ lookup(''env'', ''DOCKER_STORAGE_DRIVER'') | default(''overlay2'')
  }}'
security_enabled: true
fail2ban_enabled: '{{ lookup(''env'', ''FAIL2BAN_ENABLED'') | default(''true'') |
  bool }}'
crowdsec_enabled: '{{ lookup(''env'', ''CROWDSEC_ENABLED'') | default(''true'') |
  bool }}'
wireguard_enabled: true
network_enabled: true
pihole_enabled: true
nginx_proxy_manager_enabled: true
media_services:
- sabnzbd
- qbittorrent
- sonarr
- radarr
- lidarr
- readarr
- prowlarr
- bazarr
- jellyfin
- emby
- tdarr
- overseerr
- tautulli
- immich
- calibre-web
- audiobookshelf
- komga
- pinchflat
file_services_enabled: true
file_services:
- nextcloud
- samba
- syncthing
development_services:
- gitlab
- harbor
- minio
- paperless
- bookstack
- immich
- filebrowser
automation_services:
- mosquitto
- zigbee2mqtt
- home_assistant
- nodered
- n8n
utilities_enabled: true
utility_services:
- portainer
- watchtower
- dashdot
- code_server
- guacamole
- heimdall
- homarr
- requestrr
- unmanic
- vaultwarden
ansible_backup_dir: /var/backups/ansible
ansible_log_dir: /var/log/ansible/errors
notification_webhook_url: ''
critical_services:
- docker
- traefik
- monitoring_infrastructure
- authentik
- vault
service_recovery_timeout: 300
max_recovery_attempts: 3
max_backup_size_gb: 10
emergency_mode_enabled: false
emergency_contact: ''
pihole_web_password: '{{ vault_service_password }}'
pihole_domain: pihole.{{ domain }}
pihole_upstream_dns:
- 1.1.1.1
- 1.0.0.1
pihole_rev_server: false
pihole_rev_server_domain: ''
pihole_rev_server_target: ''
pihole_rev_server_cidr: ''
vault_postgresql_user: '{{ lookup(''env'', ''POSTGRESQL_USER'') | default(''homelab'')
  }}'
vault_postgresql_password: '{{ vault_service_password }}'
vault_mariadb_root_password: '{{ vault_service_password }}'
vault_redis_password: '{{ vault_service_password }}'
vault_sonarr_api_key: '{{ lookup(''env'', ''SONARR_API_KEY'') | default('''') }}'
vault_radarr_api_key: '{{ lookup(''env'', ''RADARR_API_KEY'') | default('''') }}'
vault_prowlarr_api_key: '{{ lookup(''env'', ''PROWLARR_API_KEY'') | default('''')
  }}'
vault_bazarr_api_key: '{{ lookup(''env'', ''BAZARR_API_KEY'') | default('''') }}'
vault_lidarr_api_key: '{{ lookup(''env'', ''LIDARR_API_KEY'') | default('''') }}'
vault_readarr_api_key: '{{ lookup(''env'', ''READARR_API_KEY'') | default('''') }}'
vault_sabnzbd_api_key: '{{ lookup(''env'', ''SABNZBD_API_KEY'') | default('''') }}'
vault_pinchflat_secret_key: '{{ lookup(''env'', ''PINCHFLAT_SECRET_KEY'') | default('''')
  }}'
vault_pinchflat_api_key: '{{ lookup(''env'', ''PINCHFLAT_API_KEY'') | default('''')
  }}'
vault_slack_webhook: '{{ lookup(''env'', ''SLACK_WEBHOOK'') | default('''') }}'
vault_discord_webhook: '{{ lookup(''env'', ''DISCORD_WEBHOOK'') | default('''') }}'
vault_telegram_bot_token: '{{ lookup(''env'', ''TELEGRAM_BOT_TOKEN'') | default('''')
  }}'
vault_telegram_chat_id: '{{ lookup(''env'', ''TELEGRAM_CHAT_ID'') | default('''')
  }}'
vault_pagerduty_routing_key: '{{ lookup(''env'', ''PAGERDUTY_ROUTING_KEY'') | default('''')
  }}'
media_dir: '{{ data_dir }}/media'
downloads_dir: '{{ data_dir }}/downloads'
traefik_network: '{{ lookup(''env'', ''TRAEFIK_NETWORK'') | default(''homelab'') }}'
ssl_email: '{{ lookup(''env'', ''SSL_EMAIL'') | default(''admin@'' + domain) }}'
monitoring_retention_days: '{{ lookup(''env'', ''MONITORING_RETENTION_DAYS'') | default(''30'')
  | int }}'
alerting_enabled: '{{ lookup(''env'', ''ALERTING_ENABLED'') | default(''true'') |
  bool }}'
system_updates_enabled: '{{ lookup(''env'', ''SYSTEM_UPDATES_ENABLED'') | default(''true'')
  | bool }}'
docker_restart_needed: '{{ lookup(''env'', ''DOCKER_RESTART_NEEDED'') | default(''false'')
  | bool }}'
log_retention_days: '{{ lookup(''env'', ''LOG_RETENTION_DAYS'') | default(''30'')
  | int }}'
